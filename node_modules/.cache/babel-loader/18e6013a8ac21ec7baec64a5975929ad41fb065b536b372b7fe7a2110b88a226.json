{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Main\\\\TapZone.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef } from 'react';\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin.svg';\nimport silverCoin from '../../../assets/pictures/coins/silver/coin.svg';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst TapZone = ({\n  telegramId,\n  currentEnergy,\n  setCurrentEnergy,\n  energyReduction,\n  stage,\n  boostData,\n  currentCoins,\n  setCurrentCoins,\n  updateUserData\n}) => {\n  _s();\n  // Use useRef to keep track of the timeout and prevent unnecessary re-renders\n  const tapTimeout = useRef(null);\n  const latestCoins = useRef(currentCoins);\n\n  // Update the ref whenever currentCoins changes\n  latestCoins.current = currentCoins;\n\n  // Debounced function for updating user data\n  const debouncedUpdateUserData = useCallback(() => {\n    if (tapTimeout.current) {\n      clearTimeout(tapTimeout.current);\n    }\n\n    // Set a timeout to delay the API call\n    tapTimeout.current = setTimeout(async () => {\n      if (latestCoins.current >= 1000000) {\n        updateUserData();\n      }\n      try {\n        await axiosDB.put('/user/update', {\n          telegramId\n        });\n      } catch (error) {\n        console.error('Error updating user:', error);\n      }\n    }, 300); // 300 ms debounce delay\n  }, [telegramId, updateUserData]);\n  const handleTouchStart = useCallback(e => {\n    const touches = e.touches.length;\n    if (currentEnergy >= energyReduction) {\n      if (tg.HapticFeedback) {\n        tg.HapticFeedback.impactOccurred('light');\n      }\n      const energySpent = new Date(boostData.dailyBoosts[1].endTime) > Date.now() ? energyReduction * touches * 10 : energyReduction * touches;\n      const newEnergy = new Date(boostData.dailyBoosts[1].endTime) > Date.now() ? Math.max(0, currentEnergy - energySpent / 10) : Math.max(0, currentEnergy - energySpent);\n      setCurrentEnergy(newEnergy);\n      const updatedCoins = latestCoins.current + energySpent;\n      setCurrentCoins(updatedCoins);\n\n      // Call the debounced function\n      debouncedUpdateUserData();\n    }\n  }, [currentEnergy, energyReduction, boostData, setCurrentEnergy, setCurrentCoins, debouncedUpdateUserData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tap-zone\",\n    onTouchStart: handleTouchStart,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: stage === 1 ? silverCoin : goldenCoin,\n      alt: \"coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n};\n_s(TapZone, \"c1Lgi3vpy0zYFHWFm5e7LBnJQ8s=\");\n_c = TapZone;\nexport default TapZone;\nvar _c;\n$RefreshReg$(_c, \"TapZone\");","map":{"version":3,"names":["React","useCallback","useRef","goldenCoin","silverCoin","axiosDB","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","TapZone","telegramId","currentEnergy","setCurrentEnergy","energyReduction","stage","boostData","currentCoins","setCurrentCoins","updateUserData","_s","tapTimeout","latestCoins","current","debouncedUpdateUserData","clearTimeout","setTimeout","put","error","console","handleTouchStart","e","touches","length","HapticFeedback","impactOccurred","energySpent","Date","dailyBoosts","endTime","now","newEnergy","Math","max","updatedCoins","className","onTouchStart","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Main/TapZone.jsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react'\r\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin.svg'\r\nimport silverCoin from '../../../assets/pictures/coins/silver/coin.svg'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\n\r\nconst tg = window.Telegram.WebApp\r\n\r\nconst TapZone = ({\r\n\ttelegramId,\r\n\tcurrentEnergy,\r\n\tsetCurrentEnergy,\r\n\tenergyReduction,\r\n\tstage,\r\n\tboostData,\r\n\tcurrentCoins,\r\n\tsetCurrentCoins,\r\n\tupdateUserData,\r\n}) => {\r\n\t// Use useRef to keep track of the timeout and prevent unnecessary re-renders\r\n\tconst tapTimeout = useRef(null)\r\n\tconst latestCoins = useRef(currentCoins)\r\n\r\n\t// Update the ref whenever currentCoins changes\r\n\tlatestCoins.current = currentCoins\r\n\r\n\t// Debounced function for updating user data\r\n\tconst debouncedUpdateUserData = useCallback(() => {\r\n\t\tif (tapTimeout.current) {\r\n\t\t\tclearTimeout(tapTimeout.current)\r\n\t\t}\r\n\r\n\t\t// Set a timeout to delay the API call\r\n\t\ttapTimeout.current = setTimeout(async () => {\r\n\t\t\tif (latestCoins.current >= 1000000) {\r\n\t\t\t\tupdateUserData()\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tawait axiosDB.put('/user/update', {\r\n\t\t\t\t\ttelegramId,\r\n\t\t\t\t})\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error updating user:', error)\r\n\t\t\t}\r\n\t\t}, 300) // 300 ms debounce delay\r\n\t}, [telegramId, updateUserData])\r\n\r\n\tconst handleTouchStart = useCallback(\r\n\t\te => {\r\n\t\t\tconst touches = e.touches.length\r\n\r\n\t\t\tif (currentEnergy >= energyReduction) {\r\n\t\t\t\tif (tg.HapticFeedback) {\r\n\t\t\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst energySpent =\r\n\t\t\t\t\tnew Date(boostData.dailyBoosts[1].endTime) > Date.now()\r\n\t\t\t\t\t\t? energyReduction * touches * 10\r\n\t\t\t\t\t\t: energyReduction * touches\r\n\t\t\t\tconst newEnergy =\r\n\t\t\t\t\tnew Date(boostData.dailyBoosts[1].endTime) > Date.now()\r\n\t\t\t\t\t\t? Math.max(0, currentEnergy - energySpent / 10)\r\n\t\t\t\t\t\t: Math.max(0, currentEnergy - energySpent)\r\n\r\n\t\t\t\tsetCurrentEnergy(newEnergy)\r\n\r\n\t\t\t\tconst updatedCoins = latestCoins.current + energySpent\r\n\t\t\t\tsetCurrentCoins(updatedCoins)\r\n\r\n\t\t\t\t// Call the debounced function\r\n\t\t\t\tdebouncedUpdateUserData()\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\tcurrentEnergy,\r\n\t\t\tenergyReduction,\r\n\t\t\tboostData,\r\n\t\t\tsetCurrentEnergy,\r\n\t\t\tsetCurrentCoins,\r\n\t\t\tdebouncedUpdateUserData,\r\n\t\t]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className='tap-zone' onTouchStart={handleTouchStart}>\r\n\t\t\t<img src={stage === 1 ? silverCoin : goldenCoin} alt='coin' />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TapZone\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}