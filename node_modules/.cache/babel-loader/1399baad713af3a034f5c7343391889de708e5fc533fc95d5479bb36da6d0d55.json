{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { getId } from '../../../utils/config';\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const telegramId = getId();\n  const [currentEnergy, setCurrentEnergy] = useState(0);\n  const [currentMaxEnergy, setCurrentMaxEnergy] = useState(100);\n  const [stage, setStage] = useState(1);\n  const [coinStage, setCoinStage] = useState(0);\n  const [boostData, setBoostData] = useState({});\n  const [coins, setCoins] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [energyRegeneRate, setEnergyRegeneRate] = useState(1);\n  const [taps, setTaps] = useState(1);\n  const [showRobotPopup, setShowRobotPopup] = useState(false);\n  const [robotMessage, setRobotMessage] = useState('');\n  const fetchUserData = useCallback(async () => {\n    try {\n      const response = await axiosDB.get(`/user/${telegramId}`);\n      const user = response.data;\n      setCurrentEnergy(user.energy);\n      setCurrentMaxEnergy(user.maxEnergy);\n      setEnergyRegeneRate(user.upgradeBoosts[2].level);\n      setStage(user.stage);\n      setBoostData({\n        upgradeBoosts: user.upgradeBoosts,\n        dailyBoosts: user.boosts\n      });\n      setCoinStage(user.coinStage);\n      setTaps(user.upgradeBoosts[2].level);\n      setCoins(user.stage === 1 ? user.soldoTaps : user.zecchinoTaps);\n      if (user.robot.isActive && user.robot.miningBalance > 200) {\n        const currency = user.stage === 1 ? 'soldo' : 'zecchino';\n        setRobotMessage(`Your robot has earned ${user.robot.miningBalance} ${currency}!`);\n        setShowRobotPopup(true);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [telegramId]);\n  useEffect(() => {\n    fetchUserData();\n  }, [fetchUserData]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentEnergy(prevEnergy => Math.min(prevEnergy + energyRegeneRate, currentMaxEnergy));\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [energyRegeneRate, currentMaxEnergy]);\n  const handleLoading = useMemo(() => {\n    return loading;\n  }, [loading]);\n  const handleRobotPopupClose = () => setShowRobotPopup(false);\n  const handleSendRequest = async () => {\n    try {\n      const response = await axiosDB.get(`/robot/claim/${telegramId}`);\n      console.log(response);\n      handleRobotPopupClose();\n      fetchUserData(); // Refresh user data after sending request\n    } catch (error) {\n      console.error('Error sending request:', error);\n    }\n  };\n  if (handleLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main\",\n    children: [/*#__PURE__*/_jsxDEV(MainBalance, {\n      stage: stage,\n      coins: coins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MainCoins, {\n      coinStage: coinStage,\n      stage: stage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TapZone, {\n      telegramId: telegramId,\n      currentEnergy: currentEnergy,\n      setCurrentEnergy: setCurrentEnergy,\n      energyReduction: taps,\n      stage: stage,\n      boostData: boostData,\n      currentCoins: coins,\n      setCurrentCoins: setCoins,\n      updateUserData: fetchUserData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group main\",\n      children: [/*#__PURE__*/_jsxDEV(EnergyCount, {\n        currentEnergy: currentEnergy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/wallet\",\n        className: \"block\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon\",\n          src: wallet,\n          alt: \"wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(EnergyBar, {\n      currentEnergy: currentEnergy,\n      maxEnergy: currentMaxEnergy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), showRobotPopup && /*#__PURE__*/_jsxDEV(RobotPopup, {\n      message: robotMessage,\n      onClose: handleRobotPopupClose,\n      onSendRequest: handleSendRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n};\n_s(Main, \"NO36xp3FA2sX2BZNlUl/pAhFg3A=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","axiosDB","getId","jsxDEV","_jsxDEV","Main","_s","telegramId","currentEnergy","setCurrentEnergy","currentMaxEnergy","setCurrentMaxEnergy","stage","setStage","coinStage","setCoinStage","boostData","setBoostData","coins","setCoins","loading","setLoading","energyRegeneRate","setEnergyRegeneRate","taps","setTaps","showRobotPopup","setShowRobotPopup","robotMessage","setRobotMessage","fetchUserData","response","get","user","data","energy","maxEnergy","upgradeBoosts","level","dailyBoosts","boosts","soldoTaps","zecchinoTaps","robot","isActive","miningBalance","currency","error","console","intervalId","setInterval","prevEnergy","Math","min","clearInterval","handleLoading","handleRobotPopupClose","handleSendRequest","log","Loading","fileName","_jsxFileName","lineNumber","columnNumber","className","children","MainBalance","MainCoins","TapZone","energyReduction","currentCoins","setCurrentCoins","updateUserData","EnergyCount","Link","to","src","wallet","alt","EnergyBar","Navigation","RobotPopup","message","onClose","onSendRequest","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Main/Main.jsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport { getId } from '../../../utils/config'\r\nimport './Main.css'\r\n\r\nconst Main = () => {\r\n\tconst telegramId = getId()\r\n\tconst [currentEnergy, setCurrentEnergy] = useState(0)\r\n\tconst [currentMaxEnergy, setCurrentMaxEnergy] = useState(100)\r\n\tconst [stage, setStage] = useState(1)\r\n\tconst [coinStage, setCoinStage] = useState(0)\r\n\tconst [boostData, setBoostData] = useState({})\r\n\tconst [coins, setCoins] = useState(0)\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [energyRegeneRate, setEnergyRegeneRate] = useState(1)\r\n\tconst [taps, setTaps] = useState(1)\r\n\tconst [showRobotPopup, setShowRobotPopup] = useState(false)\r\n\r\n\tconst [robotMessage, setRobotMessage] = useState('')\r\n\tconst fetchUserData = useCallback(async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\r\n\t\t\tconst user = response.data\r\n\t\t\tsetCurrentEnergy(user.energy)\r\n\t\t\tsetCurrentMaxEnergy(user.maxEnergy)\r\n\t\t\tsetEnergyRegeneRate(user.upgradeBoosts[2].level)\r\n\t\t\tsetStage(user.stage)\r\n\t\t\tsetBoostData({\r\n\t\t\t\tupgradeBoosts: user.upgradeBoosts,\r\n\t\t\t\tdailyBoosts: user.boosts,\r\n\t\t\t})\r\n\t\t\tsetCoinStage(user.coinStage)\r\n\t\t\tsetTaps(user.upgradeBoosts[2].level)\r\n\t\t\tsetCoins(user.stage === 1 ? user.soldoTaps : user.zecchinoTaps)\r\n\r\n\t\t\tif (user.robot.isActive && user.robot.miningBalance > 200) {\r\n\t\t\t\tconst currency = user.stage === 1 ? 'soldo' : 'zecchino'\r\n\t\t\t\tsetRobotMessage(\r\n\t\t\t\t\t`Your robot has earned ${user.robot.miningBalance} ${currency}!`\r\n\t\t\t\t)\r\n\t\t\t\tsetShowRobotPopup(true)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching user data:', error)\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}, [telegramId])\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchUserData()\r\n\t}, [fetchUserData])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst intervalId = setInterval(() => {\r\n\t\t\tsetCurrentEnergy(prevEnergy =>\r\n\t\t\t\tMath.min(prevEnergy + energyRegeneRate, currentMaxEnergy)\r\n\t\t\t)\r\n\t\t}, 1000)\r\n\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}, [energyRegeneRate, currentMaxEnergy])\r\n\r\n\tconst handleLoading = useMemo(() => {\r\n\t\treturn loading\r\n\t}, [loading])\r\n\r\n\tconst handleRobotPopupClose = () => setShowRobotPopup(false)\r\n\r\n\tconst handleSendRequest = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/robot/claim/${telegramId}`)\r\n\t\t\tconsole.log(response)\r\n\t\t\thandleRobotPopupClose()\r\n\t\t\tfetchUserData() // Refresh user data after sending request\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error sending request:', error)\r\n\t\t}\r\n\t}\r\n\r\n\tif (handleLoading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='container main'>\r\n\t\t\t<MainBalance stage={stage} coins={coins} />\r\n\t\t\t<MainCoins coinStage={coinStage} stage={stage} />\r\n\t\t\t<TapZone\r\n\t\t\t\ttelegramId={telegramId}\r\n\t\t\t\tcurrentEnergy={currentEnergy}\r\n\t\t\t\tsetCurrentEnergy={setCurrentEnergy}\r\n\t\t\t\tenergyReduction={taps}\r\n\t\t\t\tstage={stage}\r\n\t\t\t\tboostData={boostData}\r\n\t\t\t\tcurrentCoins={coins}\r\n\t\t\t\tsetCurrentCoins={setCoins}\r\n\t\t\t\tupdateUserData={fetchUserData}\r\n\t\t\t/>\r\n\t\t\t<div className='group main'>\r\n\t\t\t\t<EnergyCount currentEnergy={currentEnergy} />\r\n\t\t\t\t<Link to='/wallet' className='block'>\r\n\t\t\t\t\t<img className='icon' src={wallet} alt='wallet' />\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<EnergyBar currentEnergy={currentEnergy} maxEnergy={currentMaxEnergy} />\r\n\t\t\t<Navigation />\r\n\t\t\t{showRobotPopup && (\r\n\t\t\t\t<RobotPopup\r\n\t\t\t\t\tmessage={robotMessage}\r\n\t\t\t\t\tonClose={handleRobotPopupClose}\r\n\t\t\t\t\tonSendRequest={handleSendRequest}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Main\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}