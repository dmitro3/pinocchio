{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Coins\\\\Coins.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport bronzeCoin from '../../../assets/pictures/coins/bronze/coin_front.svg';\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin_front.svg';\nimport treeIcon from '../../../assets/pictures/tree.svg';\nimport walletIcon from '../../../assets/pictures/wallet.svg';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { getId } from '../../../utils/config';\nimport { Loader } from '../../ui/Loader/Loader';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport './Coins.css';\nimport ProgressBar from './ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst Coins = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [process, setProcess] = useState(false); // состояние для отслеживания процесса claim\n  const [displayedBalance, setDisplayedBalance] = useState(0);\n  const telegramId = getId();\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axiosDB.get(`/user/${telegramId}`);\n        setUser(response.data);\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n    const intervalId = setInterval(fetchUserData, 10000);\n    return () => clearInterval(intervalId);\n  }, [telegramId]);\n  useEffect(() => {\n    let start = displayedBalance;\n    let end = user.tree.lootBalance;\n    let increment = (end - start) / 30;\n    let interval = 50;\n    const intervalId = setInterval(() => {\n      start += increment;\n      if (start >= end) {\n        start = end;\n        clearInterval(intervalId);\n      }\n      setDisplayedBalance(Math.floor(start));\n    }, interval);\n    return () => clearInterval(intervalId);\n  }, [user.tree.lootBalance]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this);\n  }\n  const getActiveBoosts = () => {\n    let activeBoostsCount = 0;\n    user.treeCoinBoosts.map(boost => {\n      if (boost.status) {\n        activeBoostsCount += 1;\n      }\n    });\n    return activeBoostsCount;\n  };\n  const getButtonStatus = () => {\n    if (user.tree.isActive) {\n      if (user.tree.landingEndDate != null && new Date(user.tree.landingEndDate) > Date.now()) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gradient-btn\",\n          disabled: true,\n          children: \"Claim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: claim,\n          className: \"gradient-btn\",\n          children: [process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 18\n          }, this) : 'Claim', ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this);\n      }\n    } else if (user.tree.coinPlanted > 0) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startLanding,\n        className: \"gradient-btn\",\n        children: [process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this) : 'Plant', ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"gradient-btn\",\n        disabled: true,\n        children: \"Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  const getUserData = async () => {\n    try {\n      const response = await axiosDB.get(`/user/${telegramId}`);\n      const user = response.data;\n      setUser(user);\n      console.log(user);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  const plantCoin = async () => {\n    if (!user.tree.isActive) {\n      try {\n        const response = await axiosDB.post('/tree/plant', {\n          telegramId: user.telegramId\n        });\n        tg.HapticFeedback.impactOccurred('light');\n        if (response.status === 200) {\n          getUserData();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  const startLanding = async () => {\n    setProcess(true);\n    try {\n      const response = await axiosDB.put('/tree/start', {\n        telegramId: user.telegramId\n      });\n      tg.HapticFeedback.impactOccurred('light');\n      if (response.status === 200) {\n        getUserData();\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setProcess(false);\n    }\n  };\n  const claim = async () => {\n    setProcess(true);\n    try {\n      const response = await axiosDB.get(`/tree/claim/${user.telegramId}`);\n      tg.HapticFeedback.impactOccurred('light');\n      if (response.status === 200) {\n        getUserData();\n      }\n    } catch (error) {\n      console.error('Error claiming coins:', error);\n    } finally {\n      setProcess(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container coins\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title coins gradient up-case no-wrap fade-in\",\n      children: \"pinocchio coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"balance\",\n      children: [user.tree.lootBalance, ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bronzeCoin,\n          alt: \"bronze coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: plantCoin,\n      className: \"fade-in main-tree pointer\",\n      src: treeIcon,\n      alt: \"tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"planted-coins\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"coin-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"count\",\n          children: user.tree.coinPlanted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: goldenCoin,\n            alt: \"golden coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"percent-count\",\n        children: [\"+\", /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"count\",\n          children: getActiveBoosts() * 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 4\n    }, this), user.tree.isActive && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      min: new Date(user.tree.landingStartDate),\n      max: new Date(user.tree.landingEndDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tools\",\n      children: user.treeCoinBoosts.map((boost, index) => {\n        const iconPath = require(`/src/assets/pictures/${boost.icon}`);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block\",\n          style: {\n            opacity: boost.status ? 1 : 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icon\",\n            src: iconPath,\n            alt: boost.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: boost.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 8\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group coins\",\n      children: [getButtonStatus(), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/wallet\",\n        className: \"block\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon\",\n          src: walletIcon,\n          alt: \"wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 3\n  }, this);\n};\n_s(Coins, \"bIhlegIcvVx96AxoDfq3OyamLUM=\");\n_c = Coins;\nexport default Coins;\nvar _c;\n$RefreshReg$(_c, \"Coins\");","map":{"version":3,"names":["React","useEffect","useState","bronzeCoin","goldenCoin","treeIcon","walletIcon","axiosDB","getId","Loader","Navigation","Loading","ProgressBar","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","Coins","_s","loading","setLoading","process","setProcess","displayedBalance","setDisplayedBalance","telegramId","user","setUser","fetchUserData","response","get","data","console","log","error","intervalId","setInterval","clearInterval","start","end","tree","lootBalance","increment","interval","Math","floor","fileName","_jsxFileName","lineNumber","columnNumber","getActiveBoosts","activeBoostsCount","treeCoinBoosts","map","boost","status","getButtonStatus","isActive","landingEndDate","Date","now","className","disabled","children","onClick","claim","coinPlanted","startLanding","getUserData","plantCoin","post","HapticFeedback","impactOccurred","put","id","src","alt","min","landingStartDate","max","index","iconPath","require","icon","style","opacity","name","href","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Coins/Coins.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport bronzeCoin from '../../../assets/pictures/coins/bronze/coin_front.svg'\r\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin_front.svg'\r\nimport treeIcon from '../../../assets/pictures/tree.svg'\r\nimport walletIcon from '../../../assets/pictures/wallet.svg'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport { getId } from '../../../utils/config'\r\nimport { Loader } from '../../ui/Loader/Loader'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\nimport './Coins.css'\r\nimport ProgressBar from './ProgressBar'\r\n\r\nconst tg = window.Telegram.WebApp\r\n\r\nconst Coins = () => {\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [process, setProcess] = useState(false) // состояние для отслеживания процесса claim\r\n\tconst [displayedBalance, setDisplayedBalance] = useState(0)\r\n\tconst telegramId = getId()\r\n\tconst [user, setUser] = useState({})\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUserData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\r\n\t\t\t\tsetUser(response.data)\r\n\t\t\t\tconsole.log(response.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching user data:', error)\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfetchUserData()\r\n\r\n\t\tconst intervalId = setInterval(fetchUserData, 10000)\r\n\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}, [telegramId])\r\n\tuseEffect(() => {\r\n\t\tlet start = displayedBalance\r\n\t\tlet end = user.tree.lootBalance\r\n\t\tlet increment = (end - start) / 30\r\n\t\tlet interval = 50\r\n\r\n\t\tconst intervalId = setInterval(() => {\r\n\t\t\tstart += increment\r\n\t\t\tif (start >= end) {\r\n\t\t\t\tstart = end\r\n\t\t\t\tclearInterval(intervalId)\r\n\t\t\t}\r\n\t\t\tsetDisplayedBalance(Math.floor(start))\r\n\t\t}, interval)\r\n\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}, [user.tree.lootBalance])\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tconst getActiveBoosts = () => {\r\n\t\tlet activeBoostsCount = 0\r\n\t\tuser.treeCoinBoosts.map(boost => {\r\n\t\t\tif (boost.status) {\r\n\t\t\t\tactiveBoostsCount += 1\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn activeBoostsCount\r\n\t}\r\n\r\n\tconst getButtonStatus = () => {\r\n\t\tif (user.tree.isActive) {\r\n\t\t\tif (\r\n\t\t\t\tuser.tree.landingEndDate != null &&\r\n\t\t\t\tnew Date(user.tree.landingEndDate) > Date.now()\r\n\t\t\t) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<button className='gradient-btn' disabled={true}>\r\n\t\t\t\t\t\tClaim\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<button onClick={claim} className='gradient-btn'>\r\n\t\t\t\t\t\t{process ? <Loader /> : 'Claim'}{' '}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t} else if (user.tree.coinPlanted > 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<button onClick={startLanding} className='gradient-btn'>\r\n\t\t\t\t\t{process ? <Loader /> : 'Plant'}{' '}\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<button className='gradient-btn' disabled={true}>\r\n\t\t\t\t\tPlant\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getUserData = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\r\n\t\t\tconst user = response.data\r\n\t\t\tsetUser(user)\r\n\t\t\tconsole.log(user)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching user data:', error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst plantCoin = async () => {\r\n\t\tif (!user.tree.isActive) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.post('/tree/plant', {\r\n\t\t\t\t\ttelegramId: user.telegramId,\r\n\t\t\t\t})\r\n\t\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetUserData()\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst startLanding = async () => {\r\n\t\tsetProcess(true)\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.put('/tree/start', {\r\n\t\t\t\ttelegramId: user.telegramId,\r\n\t\t\t})\r\n\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tgetUserData()\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t} finally {\r\n\t\t\tsetProcess(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst claim = async () => {\r\n\t\tsetProcess(true)\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/tree/claim/${user.telegramId}`)\r\n\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tgetUserData()\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error claiming coins:', error)\r\n\t\t} finally {\r\n\t\t\tsetProcess(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='container coins'>\r\n\t\t\t<h1 className='title coins gradient up-case no-wrap fade-in'>\r\n\t\t\t\tpinocchio coin\r\n\t\t\t</h1>\r\n\t\t\t<h1 id='balance'>\r\n\t\t\t\t{user.tree.lootBalance}{' '}\r\n\t\t\t\t<div className='icon'>\r\n\t\t\t\t\t<img src={bronzeCoin} alt='bronze coin' />\r\n\t\t\t\t</div>\r\n\t\t\t</h1>\r\n\t\t\t<img\r\n\t\t\t\tonClick={plantCoin}\r\n\t\t\t\tclassName='fade-in main-tree pointer'\r\n\t\t\t\tsrc={treeIcon}\r\n\t\t\t\talt='tree'\r\n\t\t\t/>\r\n\t\t\t<div id='planted-coins'>\r\n\t\t\t\t<div id='coin-count'>\r\n\t\t\t\t\t<p id='count'>{user.tree.coinPlanted}</p>\r\n\t\t\t\t\t<div className='icon'>\r\n\t\t\t\t\t\t<img src={goldenCoin} alt='golden coin' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id='percent-count'>\r\n\t\t\t\t\t+<p id='count'>{getActiveBoosts() * 50}</p>%\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{user.tree.isActive && (\r\n\t\t\t\t<ProgressBar\r\n\t\t\t\t\tmin={new Date(user.tree.landingStartDate)}\r\n\t\t\t\t\tmax={new Date(user.tree.landingEndDate)}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className='tools'>\r\n\t\t\t\t{user.treeCoinBoosts.map((boost, index) => {\r\n\t\t\t\t\tconst iconPath = require(`/src/assets/pictures/${boost.icon}`)\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tclassName='block'\r\n\t\t\t\t\t\t\tstyle={{ opacity: boost.status ? 1 : 0.5 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img className='icon' src={iconPath} alt={boost.name} />\r\n\t\t\t\t\t\t\t<p>{boost.name}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className='group coins'>\r\n\t\t\t\t{getButtonStatus()}\r\n\t\t\t\t<a href='/wallet' className='block'>\r\n\t\t\t\t\t<img className='icon' src={walletIcon} alt='wallet' />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Coins\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}