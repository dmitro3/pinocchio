{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\ui\\\\ErrorMessageBlock\\\\ErrorMessage.jsx\";\n// src/components/ErrorMessage/ErrorMessage.jsx\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport './ErrorMessage.css';\n\n/**\r\n * Компонент для отображения сообщений об ошибках.\r\n *\r\n * @param {Object} props - Свойства компонента.\r\n * @param {string} props.message - Сообщение об ошибке для отображения.\r\n * @param {boolean} [props.visible=true] - Управляет видимостью компонента.\r\n * @param {string} [props.type='error'] - Тип сообщения ('error', 'warning', 'info').\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ErrorMessage = ({\n  message,\n  visible = true,\n  type = 'error'\n}) => {\n  if (!visible || !message) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `error-message ${type}`,\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = ErrorMessage;\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n  visible: PropTypes.bool,\n  type: PropTypes.oneOf(['error', 'warning', 'info'])\n};\nexport default ErrorMessage;\nvar _c;\n$RefreshReg$(_c, \"ErrorMessage\");","map":{"version":3,"names":["PropTypes","React","jsxDEV","_jsxDEV","ErrorMessage","message","visible","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","bool","oneOf","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/ui/ErrorMessageBlock/ErrorMessage.jsx"],"sourcesContent":["// src/components/ErrorMessage/ErrorMessage.jsx\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport './ErrorMessage.css'\r\n\r\n/**\r\n * Компонент для отображения сообщений об ошибках.\r\n *\r\n * @param {Object} props - Свойства компонента.\r\n * @param {string} props.message - Сообщение об ошибке для отображения.\r\n * @param {boolean} [props.visible=true] - Управляет видимостью компонента.\r\n * @param {string} [props.type='error'] - Тип сообщения ('error', 'warning', 'info').\r\n */\r\nconst ErrorMessage = ({ message, visible = true, type = 'error' }) => {\r\n\tif (!visible || !message) return null\r\n\r\n\treturn <div className={`error-message ${type}`}>{message}</div>\r\n}\r\n\r\nErrorMessage.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n\tvisible: PropTypes.bool,\r\n\ttype: PropTypes.oneOf(['error', 'warning', 'info']),\r\n}\r\n\r\nexport default ErrorMessage\r\n"],"mappings":";AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO,GAAG,IAAI;EAAEC,IAAI,GAAG;AAAQ,CAAC,KAAK;EACrE,IAAI,CAACD,OAAO,IAAI,CAACD,OAAO,EAAE,OAAO,IAAI;EAErC,oBAAOF,OAAA;IAAKK,SAAS,EAAE,iBAAiBD,IAAI,EAAG;IAAAE,QAAA,EAAEJ;EAAO;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAChE,CAAC;AAAAC,EAAA,GAJKV,YAAY;AAMlBA,YAAY,CAACW,SAAS,GAAG;EACxBV,OAAO,EAAEL,SAAS,CAACgB,MAAM,CAACC,UAAU;EACpCX,OAAO,EAAEN,SAAS,CAACkB,IAAI;EACvBX,IAAI,EAAEP,SAAS,CAACmB,KAAK,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC;AACnD,CAAC;AAED,eAAef,YAAY;AAAA,IAAAU,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}