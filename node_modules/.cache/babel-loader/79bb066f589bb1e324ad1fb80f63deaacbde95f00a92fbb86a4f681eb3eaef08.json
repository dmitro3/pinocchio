{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Tasks\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport TaskWindow from './TaskWindow';\nimport './Tasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [taskData, setTaskData] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const telegramId = '1145622789';\n  useEffect(() => {\n    const getTasks = async () => {\n      try {\n        const response = await axiosDB.get(`/tasks/${telegramId}`);\n        setTaskData(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTasks();\n  }, [telegramId]);\n  const completeTask = async taskId => {\n    try {\n      await axiosDB.post(`/tasks/complete`, {\n        id: taskId,\n        telegramId: telegramId\n      });\n      // Обновление состояния задачи после успешного запроса\n      setTaskData(prevData => {\n        // Flatten the incomplete tasks array to make it easier to find and filter tasks\n        const flatIncompleteTasks = prevData.incompleteTasks.flat();\n        // Find the completed task\n        const completedTask = flatIncompleteTasks.find(task => task._id === taskId);\n        if (completedTask) {\n          completedTask.isComplete = true;\n        }\n\n        // Filter out the completed task from the incomplete tasks\n        const updatedIncompleteTasks = flatIncompleteTasks.filter(task => task._id !== taskId);\n\n        // Regroup the tasks into blocks if necessary\n        const regroupedIncompleteTasks = [updatedIncompleteTasks];\n        return {\n          ...prevData,\n          incompleteTasks: regroupedIncompleteTasks,\n          completedTasks: [...prevData.completedTasks, completedTask]\n        };\n      });\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this);\n  }\n  if (!taskData || !taskData.incompleteTasks.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center gradient\",\n          children: \"Soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this);\n  }\n  const showTaskWindow = task => {\n    setSelectedTask(task);\n  };\n  const closeTaskWindow = () => {\n    setSelectedTask(null);\n  };\n  const incompleteTasks = taskData.incompleteTasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: incompleteTasks.map((taskBlock, blockIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block tasks\",\n        children: taskBlock.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          onClick: () => showTaskWindow(task),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"task-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-logo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: task.iconSrc,\n                alt: \"task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"name\",\n                children: task.taskType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"reward\",\n                children: task.reward\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), !task.isComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 10\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 10\n          }, this)]\n        }, `task-${taskIndex}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 8\n        }, this))\n      }, `block-${blockIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskWindow, {\n      showTaskWindow: closeTaskWindow,\n      taskData: selectedTask,\n      buttonText: 'Перейти',\n      completeTask: completeTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n};\n_s(Tasks, \"14BZCTZD3x2fRgbsKN5/AV5sSao=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","axiosDB","Navigation","Loading","TaskWindow","jsxDEV","_jsxDEV","Tasks","_s","taskData","setTaskData","selectedTask","setSelectedTask","loading","setLoading","telegramId","getTasks","response","get","data","error","console","completeTask","taskId","post","id","prevData","flatIncompleteTasks","incompleteTasks","flat","completedTask","find","task","_id","isComplete","updatedIncompleteTasks","filter","regroupedIncompleteTasks","completedTasks","fileName","_jsxFileName","lineNumber","columnNumber","length","className","children","showTaskWindow","closeTaskWindow","map","taskBlock","blockIndex","taskIndex","onClick","src","iconSrc","alt","taskType","reward","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\nimport TaskWindow from './TaskWindow'\r\nimport './Tasks.css'\r\n\r\nconst Tasks = () => {\r\n\tconst [taskData, setTaskData] = useState(null)\r\n\tconst [selectedTask, setSelectedTask] = useState(null)\r\n\tconst [loading, setLoading] = useState(true)\r\n\r\n\tconst telegramId = '1145622789'\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTasks = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.get(`/tasks/${telegramId}`)\r\n\t\t\t\tsetTaskData(response.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching tasks:', error)\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetTasks()\r\n\t}, [telegramId])\r\n\r\n\tconst completeTask = async taskId => {\r\n\t\ttry {\r\n\t\t\tawait axiosDB.post(`/tasks/complete`, {\r\n\t\t\t\tid: taskId,\r\n\t\t\t\ttelegramId: telegramId,\r\n\t\t\t})\r\n\t\t\t// Обновление состояния задачи после успешного запроса\r\n\t\t\tsetTaskData(prevData => {\r\n\t\t\t\t// Flatten the incomplete tasks array to make it easier to find and filter tasks\r\n\t\t\t\tconst flatIncompleteTasks = prevData.incompleteTasks.flat()\r\n\t\t\t\t// Find the completed task\r\n\t\t\t\tconst completedTask = flatIncompleteTasks.find(\r\n\t\t\t\t\ttask => task._id === taskId\r\n\t\t\t\t)\r\n\r\n\t\t\t\tif (completedTask) {\r\n\t\t\t\t\tcompletedTask.isComplete = true\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Filter out the completed task from the incomplete tasks\r\n\t\t\t\tconst updatedIncompleteTasks = flatIncompleteTasks.filter(\r\n\t\t\t\t\ttask => task._id !== taskId\r\n\t\t\t\t)\r\n\r\n\t\t\t\t// Regroup the tasks into blocks if necessary\r\n\t\t\t\tconst regroupedIncompleteTasks = [updatedIncompleteTasks]\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prevData,\r\n\t\t\t\t\tincompleteTasks: regroupedIncompleteTasks,\r\n\t\t\t\t\tcompletedTasks: [...prevData.completedTasks, completedTask],\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error completing task:', error)\r\n\t\t}\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tif (!taskData || !taskData.incompleteTasks.length) {\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t\t<div className='tasks-content'>\r\n\t\t\t\t\t<h1 className='text-center gradient'>Soon...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Navigation />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst showTaskWindow = task => {\r\n\t\tsetSelectedTask(task)\r\n\t}\r\n\r\n\tconst closeTaskWindow = () => {\r\n\t\tsetSelectedTask(null)\r\n\t}\r\n\r\n\tconst incompleteTasks = taskData.incompleteTasks\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t<div className='tasks-content'>\r\n\t\t\t\t{incompleteTasks.map((taskBlock, blockIndex) => (\r\n\t\t\t\t\t<div key={`block-${blockIndex}`} className='block tasks'>\r\n\t\t\t\t\t\t{taskBlock.map((task, taskIndex) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={`task-${taskIndex}`}\r\n\t\t\t\t\t\t\t\tclassName='task'\r\n\t\t\t\t\t\t\t\tonClick={() => showTaskWindow(task)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t<div className='task-logo'>\r\n\t\t\t\t\t\t\t\t\t\t<img src={task.iconSrc} alt='task' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.taskType}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p id='reward'>{task.reward}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{!task.isComplete ? (\r\n\t\t\t\t\t\t\t\t\t<div className='row icon'></div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className='success icon'></div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t\t{selectedTask && (\r\n\t\t\t\t<TaskWindow\r\n\t\t\t\t\tshowTaskWindow={closeTaskWindow}\r\n\t\t\t\t\ttaskData={selectedTask}\r\n\t\t\t\t\tbuttonText={'Перейти'}\r\n\t\t\t\t\tcompleteTask={completeTask}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Tasks\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}