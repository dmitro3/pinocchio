{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Tasks\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport TaskWindow from './TaskWindow';\nimport './Tasks.css';\n\n// Функция для разделения массива на части по заданному размеру\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chunkArray = (array, chunkSize) => {\n  const result = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    result.push(array.slice(i, i + chunkSize));\n  }\n  return result;\n};\nconst Tasks = () => {\n  _s();\n  const [taskData, setTaskData] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const telegramId = '1145622789';\n  useEffect(() => {\n    const getTasks = async () => {\n      try {\n        const response = await axiosDB.get(`/tasks/${telegramId}`);\n        setTaskData(response.data);\n        console.log('TASKDATA: ', response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTasks();\n  }, [telegramId]);\n  const completeTask = async taskId => {\n    try {\n      await axiosDB.post(`/tasks/complete`, {\n        id: taskId,\n        telegramId: telegramId\n      });\n      // Обновление состояния задачи после успешного запроса\n      setTaskData(prevData => {\n        const updatedTasks = prevData.tasks.map(task => task._id === taskId ? {\n          ...task,\n          isComplete: true\n        } : task);\n        return {\n          ...prevData,\n          tasks: updatedTasks\n        };\n      });\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this);\n  }\n\n  // Проверяем наличие данных taskData и не пуст ли массив задач\n  if (!taskData || taskData.tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center gradient\",\n          children: \"Soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this);\n  }\n  const showTaskWindow = task => {\n    setSelectedTask(task);\n  };\n  const closeTaskWindow = () => {\n    setSelectedTask(null);\n  };\n  const incompleteTasks = taskData.tasks.filter(task => !task.isComplete);\n  const completedTasks = taskData.tasks.filter(task => task.isComplete);\n  const incompleteTaskGroups = chunkArray(incompleteTasks, 3);\n  const completedTaskGroups = chunkArray(completedTasks, 3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: [incompleteTaskGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block tasks\",\n          children: group.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            onClick: () => showTaskWindow(task),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-logo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: task.iconSrc,\n                  alt: \"task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"task-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"name\",\n                  children: task.taskType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"reward\",\n                  children: task.isComplete ? 'Completed' : task.reward\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 10\n            }, this)]\n          }, `incomplete-${groupIndex}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this)\n      }, `incomplete-group-${groupIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 6\n      }, this)), completedTaskGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block tasks\",\n          children: group.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-logo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: task.iconSrc,\n                  alt: \"task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"task-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"name\",\n                  children: task.taskType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"reward\",\n                  children: task.isComplete ? 'Completed' : task.reward\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 10\n            }, this)]\n          }, `completed-${groupIndex}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this)\n      }, `completed-group-${groupIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 4\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskWindow, {\n      showTaskWindow: closeTaskWindow,\n      taskData: selectedTask,\n      buttonText: 'Перейти',\n      completeTask: completeTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n};\n_s(Tasks, \"14BZCTZD3x2fRgbsKN5/AV5sSao=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","axiosDB","Navigation","Loading","TaskWindow","jsxDEV","_jsxDEV","chunkArray","array","chunkSize","result","i","length","push","slice","Tasks","_s","taskData","setTaskData","selectedTask","setSelectedTask","loading","setLoading","telegramId","getTasks","response","get","data","console","log","error","completeTask","taskId","post","id","prevData","updatedTasks","tasks","map","task","_id","isComplete","fileName","_jsxFileName","lineNumber","columnNumber","className","children","showTaskWindow","closeTaskWindow","incompleteTasks","filter","completedTasks","incompleteTaskGroups","completedTaskGroups","group","groupIndex","index","onClick","src","iconSrc","alt","taskType","reward","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\nimport TaskWindow from './TaskWindow'\r\nimport './Tasks.css'\r\n\r\n// Функция для разделения массива на части по заданному размеру\r\nconst chunkArray = (array, chunkSize) => {\r\n\tconst result = []\r\n\tfor (let i = 0; i < array.length; i += chunkSize) {\r\n\t\tresult.push(array.slice(i, i + chunkSize))\r\n\t}\r\n\treturn result\r\n}\r\n\r\nconst Tasks = () => {\r\n\tconst [taskData, setTaskData] = useState(null)\r\n\tconst [selectedTask, setSelectedTask] = useState(null)\r\n\tconst [loading, setLoading] = useState(true)\r\n\r\n\tconst telegramId = '1145622789'\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTasks = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.get(`/tasks/${telegramId}`)\r\n\t\t\t\tsetTaskData(response.data)\r\n\t\t\t\tconsole.log('TASKDATA: ', response.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching tasks:', error)\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetTasks()\r\n\t}, [telegramId])\r\n\r\n\tconst completeTask = async taskId => {\r\n\t\ttry {\r\n\t\t\tawait axiosDB.post(`/tasks/complete`, {\r\n\t\t\t\tid: taskId,\r\n\t\t\t\ttelegramId: telegramId,\r\n\t\t\t})\r\n\t\t\t// Обновление состояния задачи после успешного запроса\r\n\t\t\tsetTaskData(prevData => {\r\n\t\t\t\tconst updatedTasks = prevData.tasks.map(task =>\r\n\t\t\t\t\ttask._id === taskId ? { ...task, isComplete: true } : task\r\n\t\t\t\t)\r\n\t\t\t\treturn { ...prevData, tasks: updatedTasks }\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error completing task:', error)\r\n\t\t}\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\t// Проверяем наличие данных taskData и не пуст ли массив задач\r\n\tif (!taskData || taskData.tasks.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t\t<div className='tasks-content'>\r\n\t\t\t\t\t<h1 className='text-center gradient'>Soon...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Navigation />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst showTaskWindow = task => {\r\n\t\tsetSelectedTask(task)\r\n\t}\r\n\r\n\tconst closeTaskWindow = () => {\r\n\t\tsetSelectedTask(null)\r\n\t}\r\n\r\n\tconst incompleteTasks = taskData.tasks.filter(task => !task.isComplete)\r\n\tconst completedTasks = taskData.tasks.filter(task => task.isComplete)\r\n\r\n\tconst incompleteTaskGroups = chunkArray(incompleteTasks, 3)\r\n\tconst completedTaskGroups = chunkArray(completedTasks, 3)\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t<div className='tasks-content'>\r\n\t\t\t\t{incompleteTaskGroups.map((group, groupIndex) => (\r\n\t\t\t\t\t<div key={`incomplete-group-${groupIndex}`} id='task-container'>\r\n\t\t\t\t\t\t<div className='block tasks'>\r\n\t\t\t\t\t\t\t{group.map((task, index) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={`incomplete-${groupIndex}-${index}`}\r\n\t\t\t\t\t\t\t\t\tclassName='task'\r\n\t\t\t\t\t\t\t\t\tonClick={() => showTaskWindow(task)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='task-logo'>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={task.iconSrc} alt='task' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.taskType}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='reward'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{task.isComplete ? 'Completed' : task.reward}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='row icon'></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t{completedTaskGroups.map((group, groupIndex) => (\r\n\t\t\t\t\t<div key={`completed-group-${groupIndex}`} id='task-container'>\r\n\t\t\t\t\t\t<div className='block tasks'>\r\n\t\t\t\t\t\t\t{group.map((task, index) => (\r\n\t\t\t\t\t\t\t\t<div key={`completed-${groupIndex}-${index}`} className='task'>\r\n\t\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='task-logo'>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={task.iconSrc} alt='task' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.taskType}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='reward'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{task.isComplete ? 'Completed' : task.reward}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='success icon'></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t\t{selectedTask && (\r\n\t\t\t\t<TaskWindow\r\n\t\t\t\t\tshowTaskWindow={closeTaskWindow}\r\n\t\t\t\t\ttaskData={selectedTask}\r\n\t\t\t\t\tbuttonText={'Перейти'}\r\n\t\t\t\t\tcompleteTask={completeTask}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Tasks\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}