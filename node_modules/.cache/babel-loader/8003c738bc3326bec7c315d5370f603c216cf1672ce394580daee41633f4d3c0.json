{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Coins\\\\Coins.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport bronzeCoin from '../../../assets/pictures/coins/bronze/coin_front.svg';\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin_front.svg';\nimport treeIcon from '../../../assets/pictures/tree.svg';\nimport walletIcon from '../../../assets/pictures/wallet.svg';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { getId } from '../../../utils/config';\nimport { Loader } from '../../ui/Loader/Loader';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport './Coins.css';\nimport ProgressBar from './ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst Coins = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [process, setProcess] = useState(false);\n  const [displayedBalance, setDisplayedBalance] = useState(0);\n  const [user, setUser] = useState({});\n  const telegramId = getId();\n  const fetchUserData = async () => {\n    try {\n      const response = await axiosDB.get(`/user/${telegramId}`);\n      setUser(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n    const intervalId = setInterval(fetchUserData, 10000);\n    return () => clearInterval(intervalId);\n  }, [telegramId]);\n  const incrementBalance = (start, end) => {\n    const INCREMENT_COUNT = 30;\n    const INTERVAL_DURATION = 50;\n    let increment = (end - start) / INCREMENT_COUNT;\n    const intervalId = setInterval(() => {\n      start += increment;\n      if (start >= end) {\n        start = end;\n        clearInterval(intervalId);\n      }\n      setDisplayedBalance(Math.floor(start));\n    }, INTERVAL_DURATION);\n    return () => clearInterval(intervalId);\n  };\n  useEffect(() => {\n    if (user.tree) {\n      incrementBalance(displayedBalance, user.tree.lootBalance);\n    }\n  }, [user.tree]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this);\n  }\n  const getButtonStatus = () => {\n    if (user.tree.isActive) {\n      if (user.tree.landingEndDate && new Date(user.tree.landingEndDate) > Date.now()) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gradient-btn\",\n          disabled: true,\n          children: \"Claim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: claim,\n          className: \"gradient-btn\",\n          children: process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 18\n          }, this) : 'Claim'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this);\n      }\n    } else if (user.tree.coinPlanted > 0) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startLanding,\n        className: \"gradient-btn\",\n        children: process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this) : 'Plant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"gradient-btn\",\n        disabled: true,\n        children: \"Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  const updateUserData = async () => {\n    try {\n      const response = await axiosDB.get(`/user/${telegramId}`);\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error updating user data:', error);\n    }\n  };\n  const plantCoin = async () => {\n    if (!user.tree.isActive) {\n      try {\n        const response = await axiosDB.post('/tree/plant', {\n          telegramId: user.telegramId\n        });\n        tg.HapticFeedback.impactOccurred('light');\n        if (response.status === 200) {\n          updateUserData();\n        }\n      } catch (error) {\n        console.error('Error planting coin:', error);\n      }\n    }\n  };\n  const startLanding = async () => {\n    setProcess(true);\n    try {\n      const response = await axiosDB.put('/tree/start', {\n        telegramId: user.telegramId\n      });\n      tg.HapticFeedback.impactOccurred('light');\n      if (response.status === 200) {\n        updateUserData();\n      }\n    } catch (error) {\n      console.error('Error starting landing:', error);\n    } finally {\n      setProcess(false);\n    }\n  };\n  const claim = async () => {\n    setProcess(true);\n    try {\n      const response = await axiosDB.get(`/tree/claim/${user.telegramId}`);\n      tg.HapticFeedback.impactOccurred('light');\n      if (response.status === 200) {\n        updateUserData();\n      }\n    } catch (error) {\n      console.error('Error claiming coins:', error);\n    } finally {\n      setProcess(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container coins\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title coins gradient up-case no-wrap fade-in\",\n      children: \"pinocchio coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"balance\",\n      children: [user.tree.lootBalance, ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bronzeCoin,\n          alt: \"bronze coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: plantCoin,\n      className: \"fade-in main-tree pointer\",\n      src: treeIcon,\n      alt: \"tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"planted-coins\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"coin-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"count\",\n          children: user.tree.coinPlanted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: goldenCoin,\n            alt: \"golden coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"percent-count\",\n        children: [\"+\", /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"count\",\n          children: getActiveBoosts() * 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }, this), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }, this), user.tree.isActive && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      min: new Date(user.tree.landingStartDate),\n      max: new Date(user.tree.landingEndDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tools\",\n      children: user.treeCoinBoosts.map((boost, index) => {\n        const iconPath = require(`/src/assets/pictures/${boost.icon}`);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block\",\n          style: {\n            opacity: boost.status ? 1 : 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icon\",\n            src: iconPath,\n            alt: boost.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: boost.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 8\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group coins\",\n      children: [getButtonStatus(), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/wallet\",\n        className: \"block\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon\",\n          src: walletIcon,\n          alt: \"wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 3\n  }, this);\n};\n_s(Coins, \"bIhlegIcvVx96AxoDfq3OyamLUM=\");\n_c = Coins;\nexport default Coins;\nvar _c;\n$RefreshReg$(_c, \"Coins\");","map":{"version":3,"names":["React","useEffect","useState","bronzeCoin","goldenCoin","treeIcon","walletIcon","axiosDB","getId","Loader","Navigation","Loading","ProgressBar","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","Coins","_s","loading","setLoading","process","setProcess","displayedBalance","setDisplayedBalance","user","setUser","telegramId","fetchUserData","response","get","data","console","log","error","intervalId","setInterval","clearInterval","incrementBalance","start","end","INCREMENT_COUNT","INTERVAL_DURATION","increment","Math","floor","tree","lootBalance","fileName","_jsxFileName","lineNumber","columnNumber","getButtonStatus","isActive","landingEndDate","Date","now","className","disabled","children","onClick","claim","coinPlanted","startLanding","updateUserData","plantCoin","post","HapticFeedback","impactOccurred","status","put","id","src","alt","getActiveBoosts","min","landingStartDate","max","treeCoinBoosts","map","boost","index","iconPath","require","icon","style","opacity","name","href","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Coins/Coins.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport bronzeCoin from '../../../assets/pictures/coins/bronze/coin_front.svg'\r\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin_front.svg'\r\nimport treeIcon from '../../../assets/pictures/tree.svg'\r\nimport walletIcon from '../../../assets/pictures/wallet.svg'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport { getId } from '../../../utils/config'\r\nimport { Loader } from '../../ui/Loader/Loader'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\nimport './Coins.css'\r\nimport ProgressBar from './ProgressBar'\r\n\r\nconst tg = window.Telegram.WebApp\r\n\r\nconst Coins = () => {\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [process, setProcess] = useState(false)\r\n\tconst [displayedBalance, setDisplayedBalance] = useState(0)\r\n\tconst [user, setUser] = useState({})\r\n\tconst telegramId = getId()\r\n\r\n\tconst fetchUserData = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\r\n\t\t\tsetUser(response.data)\r\n\t\t\tconsole.log(response.data)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching user data:', error)\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchUserData()\r\n\t\tconst intervalId = setInterval(fetchUserData, 10000)\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}, [telegramId])\r\n\r\n\tconst incrementBalance = (start, end) => {\r\n\t\tconst INCREMENT_COUNT = 30\r\n\t\tconst INTERVAL_DURATION = 50\r\n\t\tlet increment = (end - start) / INCREMENT_COUNT\r\n\r\n\t\tconst intervalId = setInterval(() => {\r\n\t\t\tstart += increment\r\n\t\t\tif (start >= end) {\r\n\t\t\t\tstart = end\r\n\t\t\t\tclearInterval(intervalId)\r\n\t\t\t}\r\n\t\t\tsetDisplayedBalance(Math.floor(start))\r\n\t\t}, INTERVAL_DURATION)\r\n\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user.tree) {\r\n\t\t\tincrementBalance(displayedBalance, user.tree.lootBalance)\r\n\t\t}\r\n\t}, [user.tree])\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tconst getButtonStatus = () => {\r\n\t\tif (user.tree.isActive) {\r\n\t\t\tif (\r\n\t\t\t\tuser.tree.landingEndDate &&\r\n\t\t\t\tnew Date(user.tree.landingEndDate) > Date.now()\r\n\t\t\t) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<button className='gradient-btn' disabled>\r\n\t\t\t\t\t\tClaim\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<button onClick={claim} className='gradient-btn'>\r\n\t\t\t\t\t\t{process ? <Loader /> : 'Claim'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t} else if (user.tree.coinPlanted > 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<button onClick={startLanding} className='gradient-btn'>\r\n\t\t\t\t\t{process ? <Loader /> : 'Plant'}\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<button className='gradient-btn' disabled>\r\n\t\t\t\t\tPlant\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateUserData = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\r\n\t\t\tsetUser(response.data)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error updating user data:', error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst plantCoin = async () => {\r\n\t\tif (!user.tree.isActive) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.post('/tree/plant', {\r\n\t\t\t\t\ttelegramId: user.telegramId,\r\n\t\t\t\t})\r\n\t\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tupdateUserData()\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error planting coin:', error)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst startLanding = async () => {\r\n\t\tsetProcess(true)\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.put('/tree/start', {\r\n\t\t\t\ttelegramId: user.telegramId,\r\n\t\t\t})\r\n\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tupdateUserData()\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error starting landing:', error)\r\n\t\t} finally {\r\n\t\t\tsetProcess(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst claim = async () => {\r\n\t\tsetProcess(true)\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/tree/claim/${user.telegramId}`)\r\n\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tupdateUserData()\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error claiming coins:', error)\r\n\t\t} finally {\r\n\t\t\tsetProcess(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='container coins'>\r\n\t\t\t<h1 className='title coins gradient up-case no-wrap fade-in'>\r\n\t\t\t\tpinocchio coin\r\n\t\t\t</h1>\r\n\t\t\t<h1 id='balance'>\r\n\t\t\t\t{user.tree.lootBalance}{' '}\r\n\t\t\t\t<div className='icon'>\r\n\t\t\t\t\t<img src={bronzeCoin} alt='bronze coin' />\r\n\t\t\t\t</div>\r\n\t\t\t</h1>\r\n\t\t\t<img\r\n\t\t\t\tonClick={plantCoin}\r\n\t\t\t\tclassName='fade-in main-tree pointer'\r\n\t\t\t\tsrc={treeIcon}\r\n\t\t\t\talt='tree'\r\n\t\t\t/>\r\n\t\t\t<div id='planted-coins'>\r\n\t\t\t\t<div id='coin-count'>\r\n\t\t\t\t\t<p id='count'>{user.tree.coinPlanted}</p>\r\n\t\t\t\t\t<div className='icon'>\r\n\t\t\t\t\t\t<img src={goldenCoin} alt='golden coin' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id='percent-count'>\r\n\t\t\t\t\t+<p id='count'>{getActiveBoosts() * 50}</p>%\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{user.tree.isActive && (\r\n\t\t\t\t<ProgressBar\r\n\t\t\t\t\tmin={new Date(user.tree.landingStartDate)}\r\n\t\t\t\t\tmax={new Date(user.tree.landingEndDate)}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className='tools'>\r\n\t\t\t\t{user.treeCoinBoosts.map((boost, index) => {\r\n\t\t\t\t\tconst iconPath = require(`/src/assets/pictures/${boost.icon}`)\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tclassName='block'\r\n\t\t\t\t\t\t\tstyle={{ opacity: boost.status ? 1 : 0.5 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img className='icon' src={iconPath} alt={boost.name} />\r\n\t\t\t\t\t\t\t<p>{boost.name}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className='group coins'>\r\n\t\t\t\t{getButtonStatus()}\r\n\t\t\t\t<a href='/wallet' className='block'>\r\n\t\t\t\t\t<img className='icon' src={walletIcon} alt='wallet' />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Coins\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}