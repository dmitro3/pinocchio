{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Tasks\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport TaskWindow from './TaskWindow';\nimport './Tasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [taskData, setTaskData] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const telegramId = '1145622789';\n  useEffect(() => {\n    const getTasks = async () => {\n      try {\n        const response = await axiosDB.get(`/tasks/${telegramId}`);\n        setTaskData(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTasks();\n  }, [telegramId]);\n  const completeTask = async taskId => {\n    try {\n      await axiosDB.post(`/tasks/complete`, {\n        id: taskId,\n        telegramId: telegramId\n      });\n      // Обновление состояния задачи после успешного запроса\n      setTaskData(prevData => {\n        const updatedIncompleteTasks = prevData.incompleteTasks.filter(task => task._id !== taskId);\n        const updatedCompletedTask = prevData.incompleteTasks.find(task => task._id === taskId);\n        updatedCompletedTask.isComplete = true;\n        return {\n          ...prevData,\n          incompleteTasks: updatedIncompleteTasks,\n          completedTasks: [...prevData.completedTasks, updatedCompletedTask]\n        };\n      });\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this);\n  }\n  if (!taskData || !taskData.incompleteTasks.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center gradient\",\n          children: \"Soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this);\n  }\n  const showTaskWindow = task => {\n    setSelectedTask(task);\n  };\n  const closeTaskWindow = () => {\n    setSelectedTask(null);\n  };\n  const incompleteTasks = taskData.incompleteTasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block tasks\",\n        children: incompleteTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          onClick: () => showTaskWindow(task),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"task-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-logo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: task.iconSrc,\n                alt: \"task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"name\",\n                children: task.taskType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"reward\",\n                children: task.reward\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 8\n          }, this)]\n        }, `incomplete-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskWindow, {\n      showTaskWindow: closeTaskWindow,\n      taskData: selectedTask,\n      buttonText: 'Перейти',\n      completeTask: completeTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }, this);\n};\n_s(Tasks, \"14BZCTZD3x2fRgbsKN5/AV5sSao=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","axiosDB","Navigation","Loading","TaskWindow","jsxDEV","_jsxDEV","Tasks","_s","taskData","setTaskData","selectedTask","setSelectedTask","loading","setLoading","telegramId","getTasks","response","get","data","error","console","completeTask","taskId","post","id","prevData","updatedIncompleteTasks","incompleteTasks","filter","task","_id","updatedCompletedTask","find","isComplete","completedTasks","fileName","_jsxFileName","lineNumber","columnNumber","length","className","children","showTaskWindow","closeTaskWindow","map","index","onClick","src","iconSrc","alt","taskType","reward","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\nimport TaskWindow from './TaskWindow'\r\nimport './Tasks.css'\r\n\r\nconst Tasks = () => {\r\n\tconst [taskData, setTaskData] = useState(null)\r\n\tconst [selectedTask, setSelectedTask] = useState(null)\r\n\tconst [loading, setLoading] = useState(true)\r\n\r\n\tconst telegramId = '1145622789'\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTasks = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.get(`/tasks/${telegramId}`)\r\n\t\t\t\tsetTaskData(response.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching tasks:', error)\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetTasks()\r\n\t}, [telegramId])\r\n\r\n\tconst completeTask = async taskId => {\r\n\t\ttry {\r\n\t\t\tawait axiosDB.post(`/tasks/complete`, {\r\n\t\t\t\tid: taskId,\r\n\t\t\t\ttelegramId: telegramId,\r\n\t\t\t})\r\n\t\t\t// Обновление состояния задачи после успешного запроса\r\n\t\t\tsetTaskData(prevData => {\r\n\t\t\t\tconst updatedIncompleteTasks = prevData.incompleteTasks.filter(\r\n\t\t\t\t\ttask => task._id !== taskId\r\n\t\t\t\t)\r\n\t\t\t\tconst updatedCompletedTask = prevData.incompleteTasks.find(\r\n\t\t\t\t\ttask => task._id === taskId\r\n\t\t\t\t)\r\n\t\t\t\tupdatedCompletedTask.isComplete = true\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prevData,\r\n\t\t\t\t\tincompleteTasks: updatedIncompleteTasks,\r\n\t\t\t\t\tcompletedTasks: [...prevData.completedTasks, updatedCompletedTask],\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error completing task:', error)\r\n\t\t}\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tif (!taskData || !taskData.incompleteTasks.length) {\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t\t<div className='tasks-content'>\r\n\t\t\t\t\t<h1 className='text-center gradient'>Soon...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Navigation />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst showTaskWindow = task => {\r\n\t\tsetSelectedTask(task)\r\n\t}\r\n\r\n\tconst closeTaskWindow = () => {\r\n\t\tsetSelectedTask(null)\r\n\t}\r\n\r\n\tconst incompleteTasks = taskData.incompleteTasks\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t<div className='tasks-content'>\r\n\t\t\t\t<div className='block tasks'>\r\n\t\t\t\t\t{incompleteTasks.map((task, index) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={`incomplete-${index}`}\r\n\t\t\t\t\t\t\tclassName='task'\r\n\t\t\t\t\t\t\tonClick={() => showTaskWindow(task)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t<div className='task-logo'>\r\n\t\t\t\t\t\t\t\t\t<img src={task.iconSrc} alt='task' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t<p id='name'>{task.taskType}</p>\r\n\t\t\t\t\t\t\t\t\t<p id='reward'>{task.reward}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='row icon'></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t\t{selectedTask && (\r\n\t\t\t\t<TaskWindow\r\n\t\t\t\t\tshowTaskWindow={closeTaskWindow}\r\n\t\t\t\t\ttaskData={selectedTask}\r\n\t\t\t\t\tbuttonText={'Перейти'}\r\n\t\t\t\t\tcompleteTask={completeTask}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Tasks\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}