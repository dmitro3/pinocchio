{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Tasks\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport './Tasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [taskData, setTaskData] = useState([]);\n  const telegramId = '1145622789';\n  const getTasks = async () => {\n    try {\n      const tasksList = axiosDB.get(`/tasks/${telegramId}`);\n      setTaskData(tasksList.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: taskData.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block tasks\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"task-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"name\",\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"reward\",\n                  children: task.reward\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n  /*\r\n  return (\r\n  \t<div className='container'>\r\n  \t\t<h1 className='main-title'>tasks</h1>\r\n  \t\t<div className='tasks-content'>\r\n  \t\t\t{taskData.map((task, index) => (\r\n  \t\t\t\t<div key={index} id='task-container'>\r\n  \t\t\t\t\t<div className='block tasks'>\r\n  \t\t\t\t\t\t<div className='task'>\r\n  \t\t\t\t\t\t\t<div id='task-block'>\r\n  \t\t\t\t\t\t\t\t<div className='task-logo'></div>\r\n  \t\t\t\t\t\t\t\t<div id='task-info'>\r\n  \t\t\t\t\t\t\t\t\t<p id='name'>{task.name}</p>\r\n  \t\t\t\t\t\t\t\t\t<p id='reward'>{task.reward}</p>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div className='row icon'></div>\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n  \t\t\t))}\r\n  \t\t</div>\r\n  \t\t<Navigation />\r\n  \t</div>\r\n  )\r\n  \t*/\n};\n_s(Tasks, \"5Xtk/+KLKSjnK7oTvZiHBKBuZSg=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","axiosDB","Navigation","jsxDEV","_jsxDEV","Tasks","_s","taskData","setTaskData","telegramId","getTasks","tasksList","get","data","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","id","name","reward","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport './Tasks.css'\r\n\r\nconst Tasks = () => {\r\n\tconst [taskData, setTaskData] = useState([])\r\n\tconst telegramId = '1145622789'\r\n\tconst getTasks = async () => {\r\n\t\ttry {\r\n\t\t\tconst tasksList = axiosDB.get(`/tasks/${telegramId}`)\r\n\t\t\tsetTaskData(tasksList.data)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h1 className='main-title'>tasks</h1>\r\n\t\t\t<div className='tasks-content'>\r\n\t\t\t\t{taskData.map((task, index) => (\r\n\t\t\t\t\t<div key={index} id='task-container'>\r\n\t\t\t\t\t\t<div className='block tasks'>\r\n\t\t\t\t\t\t\t<div className='task'>\r\n\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t<div className='task-logo'></div>\r\n\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.name}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p id='reward'>{task.reward}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='row icon'></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t</div>\r\n\t)\r\n\t/*\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h1 className='main-title'>tasks</h1>\r\n\t\t\t<div className='tasks-content'>\r\n\t\t\t\t{taskData.map((task, index) => (\r\n\t\t\t\t\t<div key={index} id='task-container'>\r\n\t\t\t\t\t\t<div className='block tasks'>\r\n\t\t\t\t\t\t\t<div className='task'>\r\n\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t<div className='task-logo'></div>\r\n\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.name}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p id='reward'>{task.reward}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='row icon'></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t</div>\r\n\t)\r\n\t\t*/\r\n}\r\n\r\nexport default Tasks\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}