{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport wallet from '../../../assets/pictures/wallet.svg';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { getId } from '../../../utils/config';\nimport ErrorMessage from '../../ui/errorMessage/ErrorMessage';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport MainBalance from './Balance/Balance';\nimport MainCoins from './Balance/MainCoins';\nimport EnergyBar from './Energy/EnergyBar';\nimport EnergyCount from './Energy/EnergyCount';\nimport './Main.css';\nimport RobotPopup from './Robot/RobotPopup';\nimport TapZone from './TapZone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst Main = () => {\n  _s();\n  const telegramId = getId();\n  const [currentEnergy, setCurrentEnergy] = useState(0);\n  const [currentMaxEnergy, setCurrentMaxEnergy] = useState(100);\n  const [stage, setStage] = useState(1);\n  const [coinStage, setCoinStage] = useState(0);\n  const [boostData, setBoostData] = useState({});\n  const [coins, setCoins] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [energyRegeneRate, setEnergyRegeneRate] = useState(1);\n  const [taps, setTaps] = useState(1);\n  const [showRobotPopup, setShowRobotPopup] = useState(false);\n  const [robotMessage, setRobotMessage] = useState('');\n  const [process, setProcess] = useState(false);\n  const [error, setError] = useState(null); // Добавьте состояние для ошибок\n\n  const fetchUserData = useCallback(async () => {\n    try {\n      const response = await axiosDB.get(`/user/${telegramId}`);\n      const user = response.data;\n      setCurrentEnergy(user.energy);\n      setCurrentMaxEnergy(user.maxEnergy);\n      setEnergyRegeneRate(user.upgradeBoosts[2].level);\n      setStage(user.stage);\n      setBoostData({\n        upgradeBoosts: user.upgradeBoosts,\n        dailyBoosts: user.boosts\n      });\n      setCoinStage(user.coinStage);\n      setTaps(user.upgradeBoosts[2].level);\n      setCoins(user.stage === 1 ? user.soldoTaps : user.zecchinoTaps);\n      if (user.robot.isActive && user.robot.miningBalance > 200) {\n        const currency = user.stage === 1 ? 'soldo' : 'zecchino';\n        setRobotMessage(`Your robot has earned ${user.robot.miningBalance} ${currency}!`);\n        setShowRobotPopup(true);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      setError('Failed to fetch user data. Please try again later.'); // Установите текст ошибки\n    } finally {\n      setLoading(false);\n    }\n  }, [telegramId]);\n  useEffect(() => {\n    fetchUserData();\n  }, [fetchUserData]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentEnergy(prevEnergy => Math.min(prevEnergy + energyRegeneRate, currentMaxEnergy));\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [energyRegeneRate, currentMaxEnergy]);\n  const handleLoading = useMemo(() => loading, [loading]);\n  const handleRobotPopupClose = () => setShowRobotPopup(false);\n  const handleSendRequest = async () => {\n    setProcess(true);\n    try {\n      const response = await axiosDB.get(`/robot/claim/${telegramId}`);\n      console.log(response);\n      handleRobotPopupClose();\n      fetchUserData();\n    } catch (error) {\n      console.error('Error sending request:', error);\n      setError('Failed to send request. Please try again later.'); // Установите текст ошибки\n    } finally {\n      if (tg.HapticFeedback) {\n        tg.HapticFeedback.impactOccurred('light');\n      }\n      setProcess(false);\n    }\n  };\n  if (handleLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main\",\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error,\n      visible: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), ' ', /*#__PURE__*/_jsxDEV(MainBalance, {\n      stage: stage,\n      coins: coins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MainCoins, {\n      coinStage: coinStage,\n      stage: stage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TapZone, {\n      telegramId: telegramId,\n      currentEnergy: currentEnergy,\n      setCurrentEnergy: setCurrentEnergy,\n      energyReduction: taps,\n      stage: stage,\n      boostData: boostData,\n      currentCoins: coins,\n      setCurrentCoins: setCoins,\n      updateUserData: fetchUserData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group main\",\n      children: [/*#__PURE__*/_jsxDEV(EnergyCount, {\n        currentEnergy: currentEnergy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/wallet\",\n        className: \"block\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon\",\n          src: wallet,\n          alt: \"wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(EnergyBar, {\n      currentEnergy: currentEnergy,\n      maxEnergy: currentMaxEnergy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this), showRobotPopup && /*#__PURE__*/_jsxDEV(RobotPopup, {\n      message: robotMessage,\n      onClose: handleRobotPopupClose,\n      onSendRequest: handleSendRequest,\n      process: process\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 3\n  }, this);\n};\n_s(Main, \"KJNgVNqHKjgfLp3E9zwrw9iLm9k=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","Link","wallet","axiosDB","getId","ErrorMessage","Navigation","Loading","MainBalance","MainCoins","EnergyBar","EnergyCount","RobotPopup","TapZone","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","Main","_s","telegramId","currentEnergy","setCurrentEnergy","currentMaxEnergy","setCurrentMaxEnergy","stage","setStage","coinStage","setCoinStage","boostData","setBoostData","coins","setCoins","loading","setLoading","energyRegeneRate","setEnergyRegeneRate","taps","setTaps","showRobotPopup","setShowRobotPopup","robotMessage","setRobotMessage","process","setProcess","error","setError","fetchUserData","response","get","user","data","energy","maxEnergy","upgradeBoosts","level","dailyBoosts","boosts","soldoTaps","zecchinoTaps","robot","isActive","miningBalance","currency","console","intervalId","setInterval","prevEnergy","Math","min","clearInterval","handleLoading","handleRobotPopupClose","handleSendRequest","log","HapticFeedback","impactOccurred","fileName","_jsxFileName","lineNumber","columnNumber","className","children","message","visible","energyReduction","currentCoins","setCurrentCoins","updateUserData","to","src","alt","onClose","onSendRequest","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Main/Main.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport wallet from '../../../assets/pictures/wallet.svg'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport { getId } from '../../../utils/config'\r\nimport ErrorMessage from '../../ui/errorMessage/ErrorMessage'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\nimport MainBalance from './Balance/Balance'\r\nimport MainCoins from './Balance/MainCoins'\r\nimport EnergyBar from './Energy/EnergyBar'\r\nimport EnergyCount from './Energy/EnergyCount'\r\nimport './Main.css'\r\nimport RobotPopup from './Robot/RobotPopup'\r\nimport TapZone from './TapZone'\r\nconst tg = window.Telegram.WebApp\r\n\r\nconst Main = () => {\r\n\tconst telegramId = getId()\r\n\tconst [currentEnergy, setCurrentEnergy] = useState(0)\r\n\tconst [currentMaxEnergy, setCurrentMaxEnergy] = useState(100)\r\n\tconst [stage, setStage] = useState(1)\r\n\tconst [coinStage, setCoinStage] = useState(0)\r\n\tconst [boostData, setBoostData] = useState({})\r\n\tconst [coins, setCoins] = useState(0)\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [energyRegeneRate, setEnergyRegeneRate] = useState(1)\r\n\tconst [taps, setTaps] = useState(1)\r\n\tconst [showRobotPopup, setShowRobotPopup] = useState(false)\r\n\tconst [robotMessage, setRobotMessage] = useState('')\r\n\tconst [process, setProcess] = useState(false)\r\n\tconst [error, setError] = useState(null) // Добавьте состояние для ошибок\r\n\r\n\tconst fetchUserData = useCallback(async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\r\n\t\t\tconst user = response.data\r\n\t\t\tsetCurrentEnergy(user.energy)\r\n\t\t\tsetCurrentMaxEnergy(user.maxEnergy)\r\n\t\t\tsetEnergyRegeneRate(user.upgradeBoosts[2].level)\r\n\t\t\tsetStage(user.stage)\r\n\t\t\tsetBoostData({\r\n\t\t\t\tupgradeBoosts: user.upgradeBoosts,\r\n\t\t\t\tdailyBoosts: user.boosts,\r\n\t\t\t})\r\n\t\t\tsetCoinStage(user.coinStage)\r\n\t\t\tsetTaps(user.upgradeBoosts[2].level)\r\n\t\t\tsetCoins(user.stage === 1 ? user.soldoTaps : user.zecchinoTaps)\r\n\r\n\t\t\tif (user.robot.isActive && user.robot.miningBalance > 200) {\r\n\t\t\t\tconst currency = user.stage === 1 ? 'soldo' : 'zecchino'\r\n\t\t\t\tsetRobotMessage(\r\n\t\t\t\t\t`Your robot has earned ${user.robot.miningBalance} ${currency}!`\r\n\t\t\t\t)\r\n\t\t\t\tsetShowRobotPopup(true)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching user data:', error)\r\n\t\t\tsetError('Failed to fetch user data. Please try again later.') // Установите текст ошибки\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}, [telegramId])\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchUserData()\r\n\t}, [fetchUserData])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst intervalId = setInterval(() => {\r\n\t\t\tsetCurrentEnergy(prevEnergy =>\r\n\t\t\t\tMath.min(prevEnergy + energyRegeneRate, currentMaxEnergy)\r\n\t\t\t)\r\n\t\t}, 1000)\r\n\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}, [energyRegeneRate, currentMaxEnergy])\r\n\r\n\tconst handleLoading = useMemo(() => loading, [loading])\r\n\r\n\tconst handleRobotPopupClose = () => setShowRobotPopup(false)\r\n\r\n\tconst handleSendRequest = async () => {\r\n\t\tsetProcess(true)\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/robot/claim/${telegramId}`)\r\n\t\t\tconsole.log(response)\r\n\t\t\thandleRobotPopupClose()\r\n\t\t\tfetchUserData()\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error sending request:', error)\r\n\t\t\tsetError('Failed to send request. Please try again later.') // Установите текст ошибки\r\n\t\t} finally {\r\n\t\t\tif (tg.HapticFeedback) {\r\n\t\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\t}\r\n\t\t\tsetProcess(false)\r\n\t\t}\r\n\t}\r\n\r\n\tif (handleLoading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='container main'>\r\n\t\t\t<ErrorMessage message={error} visible={!!error} />{' '}\r\n\t\t\t{/* Используйте компонент ErrorMessage */}\r\n\t\t\t<MainBalance stage={stage} coins={coins} />\r\n\t\t\t<MainCoins coinStage={coinStage} stage={stage} />\r\n\t\t\t<TapZone\r\n\t\t\t\ttelegramId={telegramId}\r\n\t\t\t\tcurrentEnergy={currentEnergy}\r\n\t\t\t\tsetCurrentEnergy={setCurrentEnergy}\r\n\t\t\t\tenergyReduction={taps}\r\n\t\t\t\tstage={stage}\r\n\t\t\t\tboostData={boostData}\r\n\t\t\t\tcurrentCoins={coins}\r\n\t\t\t\tsetCurrentCoins={setCoins}\r\n\t\t\t\tupdateUserData={fetchUserData}\r\n\t\t\t/>\r\n\t\t\t<div className='group main'>\r\n\t\t\t\t<EnergyCount currentEnergy={currentEnergy} />\r\n\t\t\t\t<Link to='/wallet' className='block'>\r\n\t\t\t\t\t<img className='icon' src={wallet} alt='wallet' />\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<EnergyBar currentEnergy={currentEnergy} maxEnergy={currentMaxEnergy} />\r\n\t\t\t<Navigation />\r\n\t\t\t{showRobotPopup && (\r\n\t\t\t\t<RobotPopup\r\n\t\t\t\t\tmessage={robotMessage}\r\n\t\t\t\t\tonClose={handleRobotPopupClose}\r\n\t\t\t\t\tonSendRequest={handleSendRequest}\r\n\t\t\t\t\tprocess={process}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Main\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}