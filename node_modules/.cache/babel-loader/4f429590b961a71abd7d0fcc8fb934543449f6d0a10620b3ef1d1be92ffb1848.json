{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Main\\\\TapZone.jsx\";\nimport React from 'react';\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin.svg';\nimport silverCoin from '../../../assets/pictures/coins/silver/coin.svg';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst TapZone = ({\n  telegramId,\n  currentEnergy,\n  setCurrentEnergy,\n  energyReduction,\n  stage,\n  currentCoins,\n  setCurrentCoins\n}) => {\n  const handleTouchStart = async e => {\n    const touches = e.touches.length;\n    if (currentEnergy > 0) {\n      const newEnergy = Math.max(0, currentEnergy - energyReduction * touches);\n      setCurrentEnergy(newEnergy);\n      try {\n        const response = await axiosDB.put('/user/update', {\n          telegramId,\n          coins: currentCoins,\n          energy: newEnergy\n        });\n        setCurrentCoins(response.data.coins);\n        setCurrentEnergy(response.data.energy);\n      } catch (error) {\n        console.error('Error updating user:', error);\n      }\n      if (tg.HapticFeedback) {\n        tg.HapticFeedback.impactOccurred('light');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tap-zone\",\n    onTouchStart: handleTouchStart,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: stage === 1 ? silverCoin : goldenCoin,\n      alt: \"coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n_c = TapZone;\nexport default TapZone;\nvar _c;\n$RefreshReg$(_c, \"TapZone\");","map":{"version":3,"names":["React","goldenCoin","silverCoin","axiosDB","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","TapZone","telegramId","currentEnergy","setCurrentEnergy","energyReduction","stage","currentCoins","setCurrentCoins","handleTouchStart","e","touches","length","newEnergy","Math","max","response","put","coins","energy","data","error","console","HapticFeedback","impactOccurred","className","onTouchStart","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Main/TapZone.jsx"],"sourcesContent":["import React from 'react'\r\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin.svg'\r\nimport silverCoin from '../../../assets/pictures/coins/silver/coin.svg'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\n\r\nconst tg = window.Telegram.WebApp\r\n\r\nconst TapZone = ({\r\n\ttelegramId,\r\n\tcurrentEnergy,\r\n\tsetCurrentEnergy,\r\n\tenergyReduction,\r\n\tstage,\r\n\tcurrentCoins,\r\n\tsetCurrentCoins,\r\n}) => {\r\n\tconst handleTouchStart = async e => {\r\n\t\tconst touches = e.touches.length\r\n\t\tif (currentEnergy > 0) {\r\n\t\t\tconst newEnergy = Math.max(0, currentEnergy - energyReduction * touches)\r\n\t\t\tsetCurrentEnergy(newEnergy)\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.put('/user/update', {\r\n\t\t\t\t\ttelegramId,\r\n\t\t\t\t\tcoins: currentCoins,\r\n\t\t\t\t\tenergy: newEnergy,\r\n\t\t\t\t})\r\n\t\t\t\tsetCurrentCoins(response.data.coins)\r\n\t\t\t\tsetCurrentEnergy(response.data.energy)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error updating user:', error)\r\n\t\t\t}\r\n\r\n\t\t\tif (tg.HapticFeedback) {\r\n\t\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='tap-zone' onTouchStart={handleTouchStart}>\r\n\t\t\t<img src={stage === 1 ? silverCoin : goldenCoin} alt='coin' />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TapZone\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,OAAO,MAAM,kCAAkC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,EAAE,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;AAEjC,MAAMC,OAAO,GAAGA,CAAC;EAChBC,UAAU;EACVC,aAAa;EACbC,gBAAgB;EAChBC,eAAe;EACfC,KAAK;EACLC,YAAY;EACZC;AACD,CAAC,KAAK;EACL,MAAMC,gBAAgB,GAAG,MAAMC,CAAC,IAAI;IACnC,MAAMC,OAAO,GAAGD,CAAC,CAACC,OAAO,CAACC,MAAM;IAChC,IAAIT,aAAa,GAAG,CAAC,EAAE;MACtB,MAAMU,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEZ,aAAa,GAAGE,eAAe,GAAGM,OAAO,CAAC;MACxEP,gBAAgB,CAACS,SAAS,CAAC;MAE3B,IAAI;QACH,MAAMG,QAAQ,GAAG,MAAMtB,OAAO,CAACuB,GAAG,CAAC,cAAc,EAAE;UAClDf,UAAU;UACVgB,KAAK,EAAEX,YAAY;UACnBY,MAAM,EAAEN;QACT,CAAC,CAAC;QACFL,eAAe,CAACQ,QAAQ,CAACI,IAAI,CAACF,KAAK,CAAC;QACpCd,gBAAgB,CAACY,QAAQ,CAACI,IAAI,CAACD,MAAM,CAAC;MACvC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC7C;MAEA,IAAIxB,EAAE,CAAC0B,cAAc,EAAE;QACtB1B,EAAE,CAAC0B,cAAc,CAACC,cAAc,CAAC,OAAO,CAAC;MAC1C;IACD;EACD,CAAC;EAED,oBACC5B,OAAA;IAAK6B,SAAS,EAAC,UAAU;IAACC,YAAY,EAAEjB,gBAAiB;IAAAkB,QAAA,eACxD/B,OAAA;MAAKgC,GAAG,EAAEtB,KAAK,KAAK,CAAC,GAAGb,UAAU,GAAGD,UAAW;MAACqC,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAER,CAAC;AAAAC,EAAA,GAtCKjC,OAAO;AAwCb,eAAeA,OAAO;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}