{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Loading\\\\ProgressBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport style from './ProgressBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  min = 0,\n  max = 100\n}) => {\n  _s();\n  const progressBarRef = useRef(null);\n  const [progress, setProgress] = useState(min);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(prevProgress => {\n        const newProgress = Math.min(prevProgress + 10, max);\n        return newProgress;\n      });\n    }, 100); // Обновляем каждую 100 мс\n\n    // Останавливаем интервал, когда прогресс достигает максимума\n    if (progress >= max) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [progress, max]);\n  useEffect(() => {\n    if (progressBarRef.current) {\n      const progressPercent = Math.min(progress / max * 100, 100);\n      progressBarRef.current.style.width = `${progressPercent}%`;\n    }\n  }, [progress, max]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.progress_bar_container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: progressBarRef,\n      className: style.progress_bar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n_s(ProgressBar, \"yCcMn9zGN1sPfarGmAtAVrDmWbA=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","style","jsxDEV","_jsxDEV","ProgressBar","min","max","_s","progressBarRef","progress","setProgress","interval","setInterval","prevProgress","newProgress","Math","clearInterval","current","progressPercent","width","className","progress_bar_container","children","ref","progress_bar","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Loading/ProgressBar.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport style from './ProgressBar.module.css'\r\n\r\nconst ProgressBar = ({ min = 0, max = 100 }) => {\r\n\tconst progressBarRef = useRef(null)\r\n\tconst [progress, setProgress] = useState(min)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\tsetProgress(prevProgress => {\r\n\t\t\t\tconst newProgress = Math.min(prevProgress + 10, max)\r\n\t\t\t\treturn newProgress\r\n\t\t\t})\r\n\t\t}, 100) // Обновляем каждую 100 мс\r\n\r\n\t\t// Останавливаем интервал, когда прогресс достигает максимума\r\n\t\tif (progress >= max) {\r\n\t\t\tclearInterval(interval)\r\n\t\t}\r\n\r\n\t\treturn () => clearInterval(interval)\r\n\t}, [progress, max])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (progressBarRef.current) {\r\n\t\t\tconst progressPercent = Math.min((progress / max) * 100, 100)\r\n\t\t\tprogressBarRef.current.style.width = `${progressPercent}%`\r\n\t\t}\r\n\t}, [progress, max])\r\n\r\n\treturn (\r\n\t\t<div className={style.progress_bar_container}>\r\n\t\t\t<div ref={progressBarRef} className={style.progress_bar}></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProgressBar\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,GAAG,GAAG,CAAC;EAAEC,GAAG,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAMC,cAAc,GAAGT,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACK,GAAG,CAAC;EAE7CP,SAAS,CAAC,MAAM;IACf,MAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAClCF,WAAW,CAACG,YAAY,IAAI;QAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACV,GAAG,CAACQ,YAAY,GAAG,EAAE,EAAEP,GAAG,CAAC;QACpD,OAAOQ,WAAW;MACnB,CAAC,CAAC;IACH,CAAC,EAAE,GAAG,CAAC,EAAC;;IAER;IACA,IAAIL,QAAQ,IAAIH,GAAG,EAAE;MACpBU,aAAa,CAACL,QAAQ,CAAC;IACxB;IAEA,OAAO,MAAMK,aAAa,CAACL,QAAQ,CAAC;EACrC,CAAC,EAAE,CAACF,QAAQ,EAAEH,GAAG,CAAC,CAAC;EAEnBR,SAAS,CAAC,MAAM;IACf,IAAIU,cAAc,CAACS,OAAO,EAAE;MAC3B,MAAMC,eAAe,GAAGH,IAAI,CAACV,GAAG,CAAEI,QAAQ,GAAGH,GAAG,GAAI,GAAG,EAAE,GAAG,CAAC;MAC7DE,cAAc,CAACS,OAAO,CAAChB,KAAK,CAACkB,KAAK,GAAG,GAAGD,eAAe,GAAG;IAC3D;EACD,CAAC,EAAE,CAACT,QAAQ,EAAEH,GAAG,CAAC,CAAC;EAEnB,oBACCH,OAAA;IAAKiB,SAAS,EAAEnB,KAAK,CAACoB,sBAAuB;IAAAC,QAAA,eAC5CnB,OAAA;MAAKoB,GAAG,EAAEf,cAAe;MAACY,SAAS,EAAEnB,KAAK,CAACuB;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAER,CAAC;AAAArB,EAAA,CAhCKH,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAkCjB,eAAeA,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}