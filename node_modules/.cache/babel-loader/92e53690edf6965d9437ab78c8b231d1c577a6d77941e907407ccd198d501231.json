{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Tasks\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport TaskWindow from './TaskWindow';\nimport './Tasks.css';\n\n// Function to chunk array into smaller arrays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chunkArray = (array, chunkSize) => {\n  const chunks = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    chunks.push(array.slice(i, i + chunkSize));\n  }\n  return chunks;\n};\nconst Tasks = () => {\n  _s();\n  const [taskData, setTaskData] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const telegramId = '1145622789';\n  useEffect(() => {\n    const getTasks = async () => {\n      try {\n        const response = await axiosDB.get(`/tasks/${telegramId}`);\n        setTaskData(response.data);\n        console.log('TASKDATA: ', response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTasks();\n  }, [telegramId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this);\n  }\n  if (!taskData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this);\n  }\n  const showTaskWindow = task => {\n    setSelectedTask(task);\n  };\n  const closeTaskWindow = () => {\n    setSelectedTask(null);\n  };\n  const incompleteTasksChunks = chunkArray(taskData.incompleteTasks || [], 3);\n  const completedTasksChunks = chunkArray(taskData.completedTasks || [], 3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), incompleteTasksChunks.map((taskChunk, chunkIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: taskChunk.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block tasks\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => showTaskWindow(task),\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-logo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: task.iconSrc,\n                  alt: \"task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"task-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"name\",\n                  children: task.taskType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"reward\",\n                  children: task.isComplete ? 'Completed' : task.reward\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 8\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this))\n    }, chunkIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)), completedTasksChunks.map((taskChunk, chunkIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: taskChunk.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block tasks\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"task-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"name\",\n                  children: task.taskType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"reward\",\n                  children: task.isComplete ? 'Completed' : task.reward\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 8\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this))\n    }, chunkIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskWindow, {\n      showTaskWindow: closeTaskWindow,\n      taskData: selectedTask,\n      buttonText: 'Перейти'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n_s(Tasks, \"14BZCTZD3x2fRgbsKN5/AV5sSao=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","axiosDB","Navigation","Loading","TaskWindow","jsxDEV","_jsxDEV","chunkArray","array","chunkSize","chunks","i","length","push","slice","Tasks","_s","taskData","setTaskData","selectedTask","setSelectedTask","loading","setLoading","telegramId","getTasks","response","get","data","console","log","error","fileName","_jsxFileName","lineNumber","columnNumber","children","showTaskWindow","task","closeTaskWindow","incompleteTasksChunks","incompleteTasks","completedTasksChunks","completedTasks","className","map","taskChunk","chunkIndex","index","id","onClick","src","iconSrc","alt","taskType","isComplete","reward","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\nimport TaskWindow from './TaskWindow'\r\nimport './Tasks.css'\r\n\r\n// Function to chunk array into smaller arrays\r\nconst chunkArray = (array, chunkSize) => {\r\n\tconst chunks = []\r\n\tfor (let i = 0; i < array.length; i += chunkSize) {\r\n\t\tchunks.push(array.slice(i, i + chunkSize))\r\n\t}\r\n\treturn chunks\r\n}\r\n\r\nconst Tasks = () => {\r\n\tconst [taskData, setTaskData] = useState(null)\r\n\tconst [selectedTask, setSelectedTask] = useState(null)\r\n\tconst [loading, setLoading] = useState(true)\r\n\r\n\tconst telegramId = '1145622789'\r\n\tuseEffect(() => {\r\n\t\tconst getTasks = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.get(`/tasks/${telegramId}`)\r\n\t\t\t\tsetTaskData(response.data)\r\n\t\t\t\tconsole.log('TASKDATA: ', response.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching tasks:', error)\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetTasks()\r\n\t}, [telegramId])\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tif (!taskData) {\r\n\t\treturn <div>No tasks available</div>\r\n\t}\r\n\r\n\tconst showTaskWindow = task => {\r\n\t\tsetSelectedTask(task)\r\n\t}\r\n\r\n\tconst closeTaskWindow = () => {\r\n\t\tsetSelectedTask(null)\r\n\t}\r\n\r\n\tconst incompleteTasksChunks = chunkArray(taskData.incompleteTasks || [], 3)\r\n\tconst completedTasksChunks = chunkArray(taskData.completedTasks || [], 3)\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t{incompleteTasksChunks.map((taskChunk, chunkIndex) => (\r\n\t\t\t\t<div className='tasks-content' key={chunkIndex}>\r\n\t\t\t\t\t{taskChunk.map((task, index) => (\r\n\t\t\t\t\t\t<div key={index} id='task-container'>\r\n\t\t\t\t\t\t\t<div className='block tasks'>\r\n\t\t\t\t\t\t\t\t<div onClick={() => showTaskWindow(task)} className='task'>\r\n\t\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='task-logo'>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={task.iconSrc} alt='task' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.taskType}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='reward'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{task.isComplete ? 'Completed' : task.reward}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='row icon'></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\r\n\t\t\t{completedTasksChunks.map((taskChunk, chunkIndex) => (\r\n\t\t\t\t<div className='tasks-content' key={chunkIndex}>\r\n\t\t\t\t\t{taskChunk.map((task, index) => (\r\n\t\t\t\t\t\t<div key={index} id='task-container'>\r\n\t\t\t\t\t\t\t<div className='block tasks'>\r\n\t\t\t\t\t\t\t\t<div className='task'>\r\n\t\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='task-logo'></div>\r\n\t\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.taskType}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='reward'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{task.isComplete ? 'Completed' : task.reward}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='row icon'></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\r\n\t\t\t<Navigation />\r\n\t\t\t{selectedTask && (\r\n\t\t\t\t<TaskWindow\r\n\t\t\t\t\tshowTaskWindow={closeTaskWindow}\r\n\t\t\t\t\ttaskData={selectedTask}\r\n\t\t\t\t\tbuttonText={'Перейти'}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Tasks\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}