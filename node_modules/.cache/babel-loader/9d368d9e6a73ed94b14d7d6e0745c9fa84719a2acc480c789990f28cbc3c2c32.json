{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Tasks\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport TaskWindow from './TaskWindow';\nimport './Tasks.css';\n\n// Функция для разделения массива на части по заданному размеру\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chunkArray = (array, chunkSize) => {\n  const result = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    result.push(array.slice(i, i + chunkSize));\n  }\n  return result;\n};\nconst Tasks = () => {\n  _s();\n  const [taskData, setTaskData] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const telegramId = '1145622789';\n  useEffect(() => {\n    const getTasks = async () => {\n      try {\n        const response = await axiosDB.get(`/tasks/${telegramId}`);\n        setTaskData(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTasks();\n  }, [telegramId]);\n  const completeTask = async taskId => {\n    try {\n      await axiosDB.post(`/tasks/complete`, {\n        id: taskId,\n        telegramId: telegramId\n      });\n      // Обновление состояния задачи после успешного запроса\n      setTaskData(prevData => {\n        const updatedIncompleteTasks = prevData.incompleteTasks.filter(task => task._id !== taskId);\n        const updatedCompletedTask = prevData.incompleteTasks.find(task => task._id === taskId);\n        updatedCompletedTask.isComplete = true;\n        return {\n          ...prevData,\n          incompleteTasks: updatedIncompleteTasks,\n          completedTasks: [...prevData.completedTasks, updatedCompletedTask]\n        };\n      });\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }, this);\n  }\n  if (!taskData || !taskData.incompleteTasks.length && !taskData.completedTasks.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center gradient\",\n          children: \"Soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this);\n  }\n  const showTaskWindow = task => {\n    setSelectedTask(task);\n  };\n  const closeTaskWindow = () => {\n    setSelectedTask(null);\n  };\n  const incompleteTasks = taskData.incompleteTasks;\n  const completedTasks = taskData.completedTasks;\n  const incompleteTaskGroups = chunkArray(incompleteTasks, 3);\n  const completedTaskGroups = chunkArray(completedTasks, 3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: [incompleteTaskGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block tasks\",\n          children: group.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            onClick: () => showTaskWindow(task),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-logo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: task.iconSrc,\n                  alt: \"task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"task-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"name\",\n                  children: task.taskType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"reward\",\n                  children: task.isComplete ? 'Completed' : task.reward\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 10\n            }, this)]\n          }, `incomplete-${groupIndex}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this)\n      }, `incomplete-group-${groupIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }, this)), completedTaskGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block tasks\",\n          children: group.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-logo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: task.iconSrc,\n                  alt: \"task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"task-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"name\",\n                  children: task.taskType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"reward\",\n                  children: task.isComplete ? 'Completed' : task.reward\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 10\n            }, this)]\n          }, `completed-${groupIndex}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this)\n      }, `completed-group-${groupIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskWindow, {\n      showTaskWindow: closeTaskWindow,\n      taskData: selectedTask,\n      buttonText: 'Перейти',\n      completeTask: completeTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }, this);\n};\n_s(Tasks, \"14BZCTZD3x2fRgbsKN5/AV5sSao=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","axiosDB","Navigation","Loading","TaskWindow","jsxDEV","_jsxDEV","chunkArray","array","chunkSize","result","i","length","push","slice","Tasks","_s","taskData","setTaskData","selectedTask","setSelectedTask","loading","setLoading","telegramId","getTasks","response","get","data","error","console","completeTask","taskId","post","id","prevData","updatedIncompleteTasks","incompleteTasks","filter","task","_id","updatedCompletedTask","find","isComplete","completedTasks","fileName","_jsxFileName","lineNumber","columnNumber","className","children","showTaskWindow","closeTaskWindow","incompleteTaskGroups","completedTaskGroups","map","group","groupIndex","index","onClick","src","iconSrc","alt","taskType","reward","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\nimport TaskWindow from './TaskWindow'\r\nimport './Tasks.css'\r\n\r\n// Функция для разделения массива на части по заданному размеру\r\nconst chunkArray = (array, chunkSize) => {\r\n\tconst result = []\r\n\tfor (let i = 0; i < array.length; i += chunkSize) {\r\n\t\tresult.push(array.slice(i, i + chunkSize))\r\n\t}\r\n\treturn result\r\n}\r\n\r\nconst Tasks = () => {\r\n\tconst [taskData, setTaskData] = useState(null)\r\n\tconst [selectedTask, setSelectedTask] = useState(null)\r\n\tconst [loading, setLoading] = useState(true)\r\n\r\n\tconst telegramId = '1145622789'\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTasks = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.get(`/tasks/${telegramId}`)\r\n\t\t\t\tsetTaskData(response.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching tasks:', error)\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetTasks()\r\n\t}, [telegramId])\r\n\r\n\tconst completeTask = async taskId => {\r\n\t\ttry {\r\n\t\t\tawait axiosDB.post(`/tasks/complete`, {\r\n\t\t\t\tid: taskId,\r\n\t\t\t\ttelegramId: telegramId,\r\n\t\t\t})\r\n\t\t\t// Обновление состояния задачи после успешного запроса\r\n\t\t\tsetTaskData(prevData => {\r\n\t\t\t\tconst updatedIncompleteTasks = prevData.incompleteTasks.filter(\r\n\t\t\t\t\ttask => task._id !== taskId\r\n\t\t\t\t)\r\n\t\t\t\tconst updatedCompletedTask = prevData.incompleteTasks.find(\r\n\t\t\t\t\ttask => task._id === taskId\r\n\t\t\t\t)\r\n\t\t\t\tupdatedCompletedTask.isComplete = true\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prevData,\r\n\t\t\t\t\tincompleteTasks: updatedIncompleteTasks,\r\n\t\t\t\t\tcompletedTasks: [...prevData.completedTasks, updatedCompletedTask],\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error completing task:', error)\r\n\t\t}\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tif (\r\n\t\t!taskData ||\r\n\t\t(!taskData.incompleteTasks.length && !taskData.completedTasks.length)\r\n\t) {\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t\t<div className='tasks-content'>\r\n\t\t\t\t\t<h1 className='text-center gradient'>Soon...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Navigation />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst showTaskWindow = task => {\r\n\t\tsetSelectedTask(task)\r\n\t}\r\n\r\n\tconst closeTaskWindow = () => {\r\n\t\tsetSelectedTask(null)\r\n\t}\r\n\r\n\tconst incompleteTasks = taskData.incompleteTasks\r\n\tconst completedTasks = taskData.completedTasks\r\n\r\n\tconst incompleteTaskGroups = chunkArray(incompleteTasks, 3)\r\n\tconst completedTaskGroups = chunkArray(completedTasks, 3)\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t<div className='tasks-content'>\r\n\t\t\t\t{incompleteTaskGroups.map((group, groupIndex) => (\r\n\t\t\t\t\t<div key={`incomplete-group-${groupIndex}`} id='task-container'>\r\n\t\t\t\t\t\t<div className='block tasks'>\r\n\t\t\t\t\t\t\t{group.map((task, index) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={`incomplete-${groupIndex}-${index}`}\r\n\t\t\t\t\t\t\t\t\tclassName='task'\r\n\t\t\t\t\t\t\t\t\tonClick={() => showTaskWindow(task)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='task-logo'>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={task.iconSrc} alt='task' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.taskType}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='reward'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{task.isComplete ? 'Completed' : task.reward}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='row icon'></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t{completedTaskGroups.map((group, groupIndex) => (\r\n\t\t\t\t\t<div key={`completed-group-${groupIndex}`} id='task-container'>\r\n\t\t\t\t\t\t<div className='block tasks'>\r\n\t\t\t\t\t\t\t{group.map((task, index) => (\r\n\t\t\t\t\t\t\t\t<div key={`completed-${groupIndex}-${index}`} className='task'>\r\n\t\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='task-logo'>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={task.iconSrc} alt='task' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.taskType}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id='reward'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{task.isComplete ? 'Completed' : task.reward}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='success icon'></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t\t{selectedTask && (\r\n\t\t\t\t<TaskWindow\r\n\t\t\t\t\tshowTaskWindow={closeTaskWindow}\r\n\t\t\t\t\ttaskData={selectedTask}\r\n\t\t\t\t\tbuttonText={'Перейти'}\r\n\t\t\t\t\tcompleteTask={completeTask}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Tasks\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}