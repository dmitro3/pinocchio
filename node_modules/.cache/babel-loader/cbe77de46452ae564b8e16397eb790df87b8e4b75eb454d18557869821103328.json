{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Coins\\\\Coins.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport bronzeCoin from '../../../assets/pictures/coins/bronze/coin_front.svg';\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin_front.svg';\nimport treeIcon from '../../../assets/pictures/tree.svg';\nimport walletIcon from '../../../assets/pictures/wallet.svg';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { getId } from '../../../utils/config';\nimport ErrorMessage from '../../ui/errorMessage/ErrorMessage.jsx';\nimport { Loader } from '../../ui/Loader/Loader';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport './Coins.css';\nimport ProgressBar from './ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst Coins = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [process, setProcess] = useState(false);\n  const [displayedBalance, setDisplayedBalance] = useState(0);\n  const [error, setError] = useState(null); // Добавьте состояние для ошибок\n  const telegramId = getId();\n  const [user, setUser] = useState({});\n  const fetchUserData = async () => {\n    try {\n      const response = await axiosDB.get(`/user/${telegramId}`);\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      setError('Failed to fetch user data. Please try again later.'); // Установите текст ошибки\n    } finally {\n      setLoading(false);\n    }\n  };\n  const incrementBalance = () => {\n    let start = displayedBalance;\n    let end = user.tree.lootBalance;\n    let increment = (end - start) / 30;\n    let interval = 10;\n    const intervalId = setInterval(() => {\n      start += increment;\n      if (start >= end) {\n        start = end;\n        clearInterval(intervalId);\n      }\n      setDisplayedBalance(Math.floor(start));\n    }, interval);\n    return () => clearInterval(intervalId);\n  };\n  useEffect(() => {\n    fetchUserData();\n    const intervalId = setInterval(fetchUserData, 10000);\n    return () => clearInterval(intervalId);\n  }, [telegramId]);\n  useEffect(() => {\n    if (user.tree) {\n      incrementBalance();\n    }\n  }, [user.tree]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this);\n  }\n  const getActiveBoostsCount = () => {\n    return user.treeCoinBoosts.reduce((count, boost) => count + (boost.status ? 1 : 0), 0);\n  };\n  const renderButton = () => {\n    if (user.tree.isActive) {\n      if (user.tree.landingEndDate && new Date(user.tree.landingEndDate) > Date.now()) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gradient-btn\",\n          disabled: true,\n          children: \"Claim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: claim,\n          className: \"gradient-btn\",\n          children: process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 18\n          }, this) : 'Claim'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this);\n      }\n    } else if (user.tree.coinPlanted > 0) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startLanding,\n        className: \"gradient-btn\",\n        children: process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this) : 'Plant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"gradient-btn\",\n        disabled: true,\n        children: \"Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  const updateUserData = async () => {\n    try {\n      const response = await axiosDB.get(`/user/${telegramId}`);\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error updating user data:', error);\n      setError('Failed to update user data. Please try again later.'); // Установите текст ошибки\n    }\n  };\n  const plantCoin = async () => {\n    if (!user.tree.isActive) {\n      try {\n        const response = await axiosDB.post('/tree/plant', {\n          telegramId: user.telegramId\n        });\n        tg.HapticFeedback.impactOccurred('light');\n        if (response.status === 200) {\n          updateUserData();\n        }\n      } catch (error) {\n        console.error('Error planting coin:', error);\n        setError('Failed to plant coin. Please try again later.'); // Установите текст ошибки\n      }\n    }\n  };\n  const startLanding = async () => {\n    setProcess(true);\n    try {\n      const response = await axiosDB.put('/tree/start', {\n        telegramId: user.telegramId\n      });\n      tg.HapticFeedback.impactOccurred('light');\n      if (response.status === 200) {\n        updateUserData();\n      }\n    } catch (error) {\n      console.error('Error starting landing:', error);\n      setError('Failed to start landing. Please try again later.'); // Установите текст ошибки\n    } finally {\n      setProcess(false);\n    }\n  };\n  const claim = async () => {\n    setProcess(true);\n    try {\n      const response = await axiosDB.get(`/tree/claim/${user.telegramId}`);\n      tg.HapticFeedback.impactOccurred('light');\n      if (response.status === 200) {\n        updateUserData();\n      }\n    } catch (error) {\n      console.error('Error claiming coins:', error);\n      setError('Failed to claim coins. Please try again later.'); // Установите текст ошибки\n    } finally {\n      setProcess(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container coins\",\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error,\n      visible: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title coins gradient up-case no-wrap fade-in\",\n      children: \"Pinocchio Coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"balance\",\n      children: [displayedBalance, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bronzeCoin,\n          alt: \"bronze coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: plantCoin,\n      className: \"fade-in main-tree pointer\",\n      src: treeIcon,\n      alt: \"tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"planted-coins\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"coin-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"count\",\n          children: user.tree.coinPlanted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: goldenCoin,\n            alt: \"golden coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"percent-count\",\n        children: [\"+\", /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"count\",\n          children: getActiveBoostsCount() * 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }, this), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 4\n    }, this), user.tree.isActive && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      min: new Date(user.tree.landingStartDate),\n      max: new Date(user.tree.landingEndDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tools\",\n      children: user.treeCoinBoosts.map((boost, index) => {\n        const iconPath = require(`/src/assets/pictures/${boost.icon}`);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block\",\n          style: {\n            opacity: boost.status ? 1 : 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icon\",\n            src: iconPath,\n            alt: boost.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: boost.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 8\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group coins\",\n      children: [renderButton(), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/wallet\",\n        className: \"block\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon\",\n          src: walletIcon,\n          alt: \"wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 3\n  }, this);\n};\n_s(Coins, \"QMlfPp2pgOosyGNt+56jOy3opYM=\");\n_c = Coins;\nexport default Coins;\nvar _c;\n$RefreshReg$(_c, \"Coins\");","map":{"version":3,"names":["React","useEffect","useState","bronzeCoin","goldenCoin","treeIcon","walletIcon","axiosDB","getId","ErrorMessage","Loader","Navigation","Loading","ProgressBar","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","Coins","_s","loading","setLoading","process","setProcess","displayedBalance","setDisplayedBalance","error","setError","telegramId","user","setUser","fetchUserData","response","get","data","console","incrementBalance","start","end","tree","lootBalance","increment","interval","intervalId","setInterval","clearInterval","Math","floor","fileName","_jsxFileName","lineNumber","columnNumber","getActiveBoostsCount","treeCoinBoosts","reduce","count","boost","status","renderButton","isActive","landingEndDate","Date","now","className","disabled","children","onClick","claim","coinPlanted","startLanding","updateUserData","plantCoin","post","HapticFeedback","impactOccurred","put","message","visible","id","src","alt","min","landingStartDate","max","map","index","iconPath","require","icon","style","opacity","name","href","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Coins/Coins.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport bronzeCoin from '../../../assets/pictures/coins/bronze/coin_front.svg'\r\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin_front.svg'\r\nimport treeIcon from '../../../assets/pictures/tree.svg'\r\nimport walletIcon from '../../../assets/pictures/wallet.svg'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport { getId } from '../../../utils/config'\r\nimport ErrorMessage from '../../ui/errorMessage/ErrorMessage.jsx'\r\nimport { Loader } from '../../ui/Loader/Loader'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\nimport './Coins.css'\r\nimport ProgressBar from './ProgressBar'\r\n\r\nconst tg = window.Telegram.WebApp\r\n\r\nconst Coins = () => {\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [process, setProcess] = useState(false)\r\n\tconst [displayedBalance, setDisplayedBalance] = useState(0)\r\n\tconst [error, setError] = useState(null) // Добавьте состояние для ошибок\r\n\tconst telegramId = getId()\r\n\tconst [user, setUser] = useState({})\r\n\r\n\tconst fetchUserData = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\r\n\t\t\tsetUser(response.data)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching user data:', error)\r\n\t\t\tsetError('Failed to fetch user data. Please try again later.') // Установите текст ошибки\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst incrementBalance = () => {\r\n\t\tlet start = displayedBalance\r\n\t\tlet end = user.tree.lootBalance\r\n\t\tlet increment = (end - start) / 30\r\n\t\tlet interval = 10\r\n\r\n\t\tconst intervalId = setInterval(() => {\r\n\t\t\tstart += increment\r\n\t\t\tif (start >= end) {\r\n\t\t\t\tstart = end\r\n\t\t\t\tclearInterval(intervalId)\r\n\t\t\t}\r\n\t\t\tsetDisplayedBalance(Math.floor(start))\r\n\t\t}, interval)\r\n\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchUserData()\r\n\t\tconst intervalId = setInterval(fetchUserData, 10000)\r\n\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}, [telegramId])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user.tree) {\r\n\t\t\tincrementBalance()\r\n\t\t}\r\n\t}, [user.tree])\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tconst getActiveBoostsCount = () => {\r\n\t\treturn user.treeCoinBoosts.reduce(\r\n\t\t\t(count, boost) => count + (boost.status ? 1 : 0),\r\n\t\t\t0\r\n\t\t)\r\n\t}\r\n\r\n\tconst renderButton = () => {\r\n\t\tif (user.tree.isActive) {\r\n\t\t\tif (\r\n\t\t\t\tuser.tree.landingEndDate &&\r\n\t\t\t\tnew Date(user.tree.landingEndDate) > Date.now()\r\n\t\t\t) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<button className='gradient-btn' disabled>\r\n\t\t\t\t\t\tClaim\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<button onClick={claim} className='gradient-btn'>\r\n\t\t\t\t\t\t{process ? <Loader /> : 'Claim'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t} else if (user.tree.coinPlanted > 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<button onClick={startLanding} className='gradient-btn'>\r\n\t\t\t\t\t{process ? <Loader /> : 'Plant'}\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<button className='gradient-btn' disabled>\r\n\t\t\t\t\tPlant\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateUserData = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\r\n\t\t\tsetUser(response.data)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error updating user data:', error)\r\n\t\t\tsetError('Failed to update user data. Please try again later.') // Установите текст ошибки\r\n\t\t}\r\n\t}\r\n\r\n\tconst plantCoin = async () => {\r\n\t\tif (!user.tree.isActive) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.post('/tree/plant', {\r\n\t\t\t\t\ttelegramId: user.telegramId,\r\n\t\t\t\t})\r\n\t\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tupdateUserData()\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error planting coin:', error)\r\n\t\t\t\tsetError('Failed to plant coin. Please try again later.') // Установите текст ошибки\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst startLanding = async () => {\r\n\t\tsetProcess(true)\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.put('/tree/start', {\r\n\t\t\t\ttelegramId: user.telegramId,\r\n\t\t\t})\r\n\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tupdateUserData()\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error starting landing:', error)\r\n\t\t\tsetError('Failed to start landing. Please try again later.') // Установите текст ошибки\r\n\t\t} finally {\r\n\t\t\tsetProcess(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst claim = async () => {\r\n\t\tsetProcess(true)\r\n\t\ttry {\r\n\t\t\tconst response = await axiosDB.get(`/tree/claim/${user.telegramId}`)\r\n\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tupdateUserData()\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error claiming coins:', error)\r\n\t\t\tsetError('Failed to claim coins. Please try again later.') // Установите текст ошибки\r\n\t\t} finally {\r\n\t\t\tsetProcess(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='container coins'>\r\n\t\t\t<ErrorMessage message={error} visible={!!error} />{' '}\r\n\t\t\t{/* Используйте компонент ErrorMessage */}\r\n\t\t\t<h1 className='title coins gradient up-case no-wrap fade-in'>\r\n\t\t\t\tPinocchio Coin\r\n\t\t\t</h1>\r\n\t\t\t<h1 id='balance'>\r\n\t\t\t\t{displayedBalance}\r\n\t\t\t\t<div className='icon'>\r\n\t\t\t\t\t<img src={bronzeCoin} alt='bronze coin' />\r\n\t\t\t\t</div>\r\n\t\t\t</h1>\r\n\t\t\t<img\r\n\t\t\t\tonClick={plantCoin}\r\n\t\t\t\tclassName='fade-in main-tree pointer'\r\n\t\t\t\tsrc={treeIcon}\r\n\t\t\t\talt='tree'\r\n\t\t\t/>\r\n\t\t\t<div id='planted-coins'>\r\n\t\t\t\t<div id='coin-count'>\r\n\t\t\t\t\t<p id='count'>{user.tree.coinPlanted}</p>\r\n\t\t\t\t\t<div className='icon'>\r\n\t\t\t\t\t\t<img src={goldenCoin} alt='golden coin' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id='percent-count'>\r\n\t\t\t\t\t+<p id='count'>{getActiveBoostsCount() * 50}</p>%\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{user.tree.isActive && (\r\n\t\t\t\t<ProgressBar\r\n\t\t\t\t\tmin={new Date(user.tree.landingStartDate)}\r\n\t\t\t\t\tmax={new Date(user.tree.landingEndDate)}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<div className='tools'>\r\n\t\t\t\t{user.treeCoinBoosts.map((boost, index) => {\r\n\t\t\t\t\tconst iconPath = require(`/src/assets/pictures/${boost.icon}`)\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tclassName='block'\r\n\t\t\t\t\t\t\tstyle={{ opacity: boost.status ? 1 : 0.5 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img className='icon' src={iconPath} alt={boost.name} />\r\n\t\t\t\t\t\t\t<p>{boost.name}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className='group coins'>\r\n\t\t\t\t{renderButton()}\r\n\t\t\t\t<a href='/wallet' className='block'>\r\n\t\t\t\t\t<img className='icon' src={walletIcon} alt='wallet' />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Coins\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}