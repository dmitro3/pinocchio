{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Main\\\\TapZone.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin.svg';\nimport silverCoin from '../../../assets/pictures/coins/silver/coin.svg';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst TapZone = ({\n  telegramId,\n  currentEnergy,\n  setCurrentEnergy,\n  energyReduction,\n  stage,\n  currentCoins,\n  setCurrentCoins\n}) => {\n  _s();\n  const [pendingEnergy, setPendingEnergy] = useState(currentEnergy);\n  const [pendingCoins, setPendingCoins] = useState(currentCoins);\n  const handleTouchStart = useCallback(e => {\n    const touches = e.touches.length;\n    if (pendingEnergy > 0) {\n      const energySpent = energyReduction * touches;\n      const newEnergy = Math.max(0, pendingEnergy - energySpent);\n      setPendingEnergy(newEnergy);\n      const updatedCoins = pendingCoins + energySpent;\n      setPendingCoins(updatedCoins);\n      if (tg.HapticFeedback) {\n        tg.HapticFeedback.impactOccurred('light');\n      }\n    }\n  }, [pendingEnergy, pendingCoins, energyReduction]);\n  useEffect(() => {\n    const intervalId = setInterval(async () => {\n      try {\n        const response = await axiosDB.put('/user/update', {\n          telegramId,\n          energy: pendingEnergy,\n          ...(stage === 1 ? {\n            soldo: pendingCoins\n          } : {\n            zecchino: pendingCoins\n          })\n        });\n        if (stage === 1) {\n          setCurrentCoins(response.data.soldo);\n        } else {\n          setCurrentCoins(response.data.zecchino);\n        }\n        setCurrentEnergy(response.data.energy);\n      } catch (error) {\n        console.error('Error updating user:', error);\n      }\n    }, 10000); // 10000 ms = 10 seconds\n\n    return () => clearInterval(intervalId);\n  }, [telegramId, pendingEnergy, pendingCoins, stage, setCurrentCoins, setCurrentEnergy]);\n  useEffect(() => {\n    setPendingEnergy(currentEnergy);\n    setPendingCoins(currentCoins);\n  }, [currentEnergy, currentCoins]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tap-zone\",\n    onTouchStart: handleTouchStart,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: stage === 1 ? silverCoin : goldenCoin,\n      alt: \"coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n_s(TapZone, \"12S0o6QMyeZt6jwWBzPrFFl3tDA=\");\n_c = TapZone;\nexport default TapZone;\nvar _c;\n$RefreshReg$(_c, \"TapZone\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","goldenCoin","silverCoin","axiosDB","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","TapZone","telegramId","currentEnergy","setCurrentEnergy","energyReduction","stage","currentCoins","setCurrentCoins","_s","pendingEnergy","setPendingEnergy","pendingCoins","setPendingCoins","handleTouchStart","e","touches","length","energySpent","newEnergy","Math","max","updatedCoins","HapticFeedback","impactOccurred","intervalId","setInterval","response","put","energy","soldo","zecchino","data","error","console","clearInterval","className","onTouchStart","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Main/TapZone.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin.svg'\r\nimport silverCoin from '../../../assets/pictures/coins/silver/coin.svg'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\n\r\nconst tg = window.Telegram.WebApp\r\n\r\nconst TapZone = ({\r\n\ttelegramId,\r\n\tcurrentEnergy,\r\n\tsetCurrentEnergy,\r\n\tenergyReduction,\r\n\tstage,\r\n\tcurrentCoins,\r\n\tsetCurrentCoins,\r\n}) => {\r\n\tconst [pendingEnergy, setPendingEnergy] = useState(currentEnergy)\r\n\tconst [pendingCoins, setPendingCoins] = useState(currentCoins)\r\n\r\n\tconst handleTouchStart = useCallback(\r\n\t\te => {\r\n\t\t\tconst touches = e.touches.length\r\n\t\t\tif (pendingEnergy > 0) {\r\n\t\t\t\tconst energySpent = energyReduction * touches\r\n\t\t\t\tconst newEnergy = Math.max(0, pendingEnergy - energySpent)\r\n\t\t\t\tsetPendingEnergy(newEnergy)\r\n\r\n\t\t\t\tconst updatedCoins = pendingCoins + energySpent\r\n\t\t\t\tsetPendingCoins(updatedCoins)\r\n\r\n\t\t\t\tif (tg.HapticFeedback) {\r\n\t\t\t\t\ttg.HapticFeedback.impactOccurred('light')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[pendingEnergy, pendingCoins, energyReduction]\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst intervalId = setInterval(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.put('/user/update', {\r\n\t\t\t\t\ttelegramId,\r\n\t\t\t\t\tenergy: pendingEnergy,\r\n\t\t\t\t\t...(stage === 1\r\n\t\t\t\t\t\t? { soldo: pendingCoins }\r\n\t\t\t\t\t\t: { zecchino: pendingCoins }),\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (stage === 1) {\r\n\t\t\t\t\tsetCurrentCoins(response.data.soldo)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetCurrentCoins(response.data.zecchino)\r\n\t\t\t\t}\r\n\t\t\t\tsetCurrentEnergy(response.data.energy)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error updating user:', error)\r\n\t\t\t}\r\n\t\t}, 10000) // 10000 ms = 10 seconds\r\n\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}, [\r\n\t\ttelegramId,\r\n\t\tpendingEnergy,\r\n\t\tpendingCoins,\r\n\t\tstage,\r\n\t\tsetCurrentCoins,\r\n\t\tsetCurrentEnergy,\r\n\t])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPendingEnergy(currentEnergy)\r\n\t\tsetPendingCoins(currentCoins)\r\n\t}, [currentEnergy, currentCoins])\r\n\r\n\treturn (\r\n\t\t<div className='tap-zone' onTouchStart={handleTouchStart}>\r\n\t\t\t<img src={stage === 1 ? silverCoin : goldenCoin} alt='coin' />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TapZone\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}