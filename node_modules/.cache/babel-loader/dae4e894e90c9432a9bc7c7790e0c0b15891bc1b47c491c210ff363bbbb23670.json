{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilnaz\\\\Desktop\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Tasks\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { getId } from '../../../utils/config';\nimport Navigation from '../../ui/Navigation/Navigation';\nimport Loading from '../Loading/Loading';\nimport ErrorMessage from '../../ui/ErrorMessageBlock/ErrorMessageBlock';\nimport TaskWindow from './TaskWindow';\nimport './Tasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const telegramId = getId();\n  const [taskData, setTaskData] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // Добавьте состояние для ошибок\n\n  useEffect(() => {\n    const getTasks = async () => {\n      try {\n        const response = await axiosDB.get(`/tasks/${telegramId}`);\n        console.log('Fetched task data:', response.data); // Log the fetched data\n        setTaskData(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n        setError('Failed to fetch tasks. Please try again later.'); // Установите текст ошибки\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTasks();\n  }, [telegramId]);\n  const completeTask = async taskId => {\n    try {\n      await axiosDB.post(`/tasks/complete`, {\n        id: taskId,\n        telegramId: telegramId\n      });\n\n      // Update task state after a successful request\n      setTaskData(prevData => {\n        const updatedIncompleteTasks = prevData.incompleteTasks.map(taskBlock => {\n          const updatedTasks = taskBlock.tasksBlock.map(task => {\n            if (task._id === taskId) {\n              return {\n                ...task,\n                isComplete: true\n              };\n            }\n            return task;\n          });\n          return {\n            ...taskBlock,\n            tasksBlock: updatedTasks\n          };\n        });\n        return {\n          ...prevData,\n          incompleteTasks: updatedIncompleteTasks.filter(taskBlock => taskBlock.tasksBlock.some(task => !task.isComplete))\n        };\n      });\n    } catch (error) {\n      console.error('Error completing task:', error);\n      setError('Failed to complete the task. Please try again later.'); // Установите текст ошибки\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }, this);\n  }\n  if (!taskData || !taskData.incompleteTasks.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: error,\n        visible: !!error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center gradient\",\n          children: \"Soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this);\n  }\n  const showTaskWindow = task => {\n    setSelectedTask(task);\n  };\n  const closeTaskWindow = () => {\n    setSelectedTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error,\n      visible: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: taskData.incompleteTasks.map((taskBlock, blockIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block tasks\",\n        children: taskBlock.tasksBlock.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          onClick: () => showTaskWindow(task),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"task-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-logo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/${task.iconSrc}`,\n                alt: \"task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"task-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"name\",\n                children: task.taskType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"reward\",\n                children: task.reward\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this), !task.isComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 10\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 10\n          }, this)]\n        }, `task-${taskIndex}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 8\n        }, this))\n      }, `block-${blockIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskWindow, {\n      showTaskWindow: closeTaskWindow,\n      taskData: selectedTask,\n      buttonText: 'Перейти',\n      completeTask: completeTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, this);\n};\n_s(Tasks, \"K87f7kzkQGp/yHFSA+m51y2toiw=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","axiosDB","getId","Navigation","Loading","ErrorMessage","TaskWindow","jsxDEV","_jsxDEV","Tasks","_s","telegramId","taskData","setTaskData","selectedTask","setSelectedTask","loading","setLoading","error","setError","getTasks","response","get","console","log","data","completeTask","taskId","post","id","prevData","updatedIncompleteTasks","incompleteTasks","map","taskBlock","updatedTasks","tasksBlock","task","_id","isComplete","filter","some","fileName","_jsxFileName","lineNumber","columnNumber","length","className","children","message","visible","showTaskWindow","closeTaskWindow","blockIndex","taskIndex","onClick","src","iconSrc","alt","taskType","reward","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/ilnaz/Desktop/Pinocchio/pinocchio-react/src/components/screens/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axiosDB from '../../../utils/axios/axiosConfig'\r\nimport { getId } from '../../../utils/config'\r\nimport Navigation from '../../ui/Navigation/Navigation'\r\nimport Loading from '../Loading/Loading'\r\n\r\nimport ErrorMessage from '../../ui/ErrorMessageBlock/ErrorMessageBlock'\r\nimport TaskWindow from './TaskWindow'\r\nimport './Tasks.css'\r\n\r\nconst Tasks = () => {\r\n\tconst telegramId = getId()\r\n\tconst [taskData, setTaskData] = useState(null)\r\n\tconst [selectedTask, setSelectedTask] = useState(null)\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [error, setError] = useState(null) // Добавьте состояние для ошибок\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTasks = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axiosDB.get(`/tasks/${telegramId}`)\r\n\t\t\t\tconsole.log('Fetched task data:', response.data) // Log the fetched data\r\n\t\t\t\tsetTaskData(response.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching tasks:', error)\r\n\t\t\t\tsetError('Failed to fetch tasks. Please try again later.') // Установите текст ошибки\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetTasks()\r\n\t}, [telegramId])\r\n\r\n\tconst completeTask = async taskId => {\r\n\t\ttry {\r\n\t\t\tawait axiosDB.post(`/tasks/complete`, {\r\n\t\t\t\tid: taskId,\r\n\t\t\t\ttelegramId: telegramId,\r\n\t\t\t})\r\n\r\n\t\t\t// Update task state after a successful request\r\n\t\t\tsetTaskData(prevData => {\r\n\t\t\t\tconst updatedIncompleteTasks = prevData.incompleteTasks.map(\r\n\t\t\t\t\ttaskBlock => {\r\n\t\t\t\t\t\tconst updatedTasks = taskBlock.tasksBlock.map(task => {\r\n\t\t\t\t\t\t\tif (task._id === taskId) {\r\n\t\t\t\t\t\t\t\treturn { ...task, isComplete: true }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn task\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\treturn { ...taskBlock, tasksBlock: updatedTasks }\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prevData,\r\n\t\t\t\t\tincompleteTasks: updatedIncompleteTasks.filter(taskBlock =>\r\n\t\t\t\t\t\ttaskBlock.tasksBlock.some(task => !task.isComplete)\r\n\t\t\t\t\t),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error completing task:', error)\r\n\t\t\tsetError('Failed to complete the task. Please try again later.') // Установите текст ошибки\r\n\t\t}\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tif (!taskData || !taskData.incompleteTasks.length) {\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<ErrorMessage message={error} visible={!!error} />{' '}\r\n\t\t\t\t{/* Используйте компонент ErrorMessage */}\r\n\t\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t\t<div className='tasks-content'>\r\n\t\t\t\t\t<h1 className='text-center gradient'>Soon...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Navigation />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst showTaskWindow = task => {\r\n\t\tsetSelectedTask(task)\r\n\t}\r\n\r\n\tconst closeTaskWindow = () => {\r\n\t\tsetSelectedTask(null)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<ErrorMessage message={error} visible={!!error} />{' '}\r\n\t\t\t{/* Используйте компонент ErrorMessage */}\r\n\t\t\t<h1 className='main-title'>Tasks</h1>\r\n\t\t\t<div className='tasks-content'>\r\n\t\t\t\t{taskData.incompleteTasks.map((taskBlock, blockIndex) => (\r\n\t\t\t\t\t<div key={`block-${blockIndex}`} className='block tasks'>\r\n\t\t\t\t\t\t{taskBlock.tasksBlock.map((task, taskIndex) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={`task-${taskIndex}`}\r\n\t\t\t\t\t\t\t\tclassName='task'\r\n\t\t\t\t\t\t\t\tonClick={() => showTaskWindow(task)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div id='task-block'>\r\n\t\t\t\t\t\t\t\t\t<div className='task-logo'>\r\n\t\t\t\t\t\t\t\t\t\t<img src={`/${task.iconSrc}`} alt='task' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div id='task-info'>\r\n\t\t\t\t\t\t\t\t\t\t<p id='name'>{task.taskType}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p id='reward'>{task.reward}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{!task.isComplete ? (\r\n\t\t\t\t\t\t\t\t\t<div className='row icon'></div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className='success icon'></div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Navigation />\r\n\t\t\t{selectedTask && (\r\n\t\t\t\t<TaskWindow\r\n\t\t\t\t\tshowTaskWindow={closeTaskWindow}\r\n\t\t\t\t\ttaskData={selectedTask}\r\n\t\t\t\t\tbuttonText={'Перейти'}\r\n\t\t\t\t\tcompleteTask={completeTask}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Tasks\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}